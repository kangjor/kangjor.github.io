{"version":3,"sources":["webpack:///./node_modules/core-js/internals/use-symbol-as-uid.js","webpack:///./node_modules/core-js/internals/hidden-keys.js","webpack:///./node_modules/core-js/internals/fails.js","webpack:///./node_modules/core-js/internals/get-built-in.js","webpack:///./node_modules/core-js/internals/is-symbol.js","webpack:///./node_modules/core-js/internals/global.js","webpack:///./node_modules/core-js/internals/get-method.js","webpack:///./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack:///./node_modules/prism-react-renderer/dist/index.js","webpack:///./node_modules/core-js/internals/function-uncurry-this.js","webpack:///./node_modules/core-js/internals/define-built-in-accessor.js","webpack:///./node_modules/core-js/internals/shared-key.js","webpack:///./node_modules/core-js/internals/symbol-constructor-detection.js","webpack:///./node_modules/core-js/internals/ie8-dom-define.js","webpack:///./node_modules/core-js/internals/try-to-string.js","webpack:///./node_modules/core-js/internals/make-built-in.js","webpack:///./node_modules/core-js/internals/is-callable.js","webpack:///./node_modules/core-js/internals/has-own-property.js","webpack:///./node_modules/core-js/internals/require-object-coercible.js","webpack:///./node_modules/core-js/internals/engine-v8-version.js","webpack:///./node_modules/core-js/internals/engine-user-agent.js","webpack:///./node_modules/core-js/internals/object-is-prototype-of.js","webpack:///./node_modules/core-js/internals/function-bind-native.js","webpack:///./node_modules/core-js/internals/ordinary-to-primitive.js","webpack:///./node_modules/prism-react-renderer/prism/index.js","webpack:///./node_modules/core-js/modules/es.regexp.flags.js","webpack:///./node_modules/core-js/internals/shared.js","webpack:///./node_modules/core-js/internals/a-callable.js","webpack:///./node_modules/core-js/internals/create-property-descriptor.js","webpack:///./node_modules/core-js/internals/function-name.js","webpack:///./node_modules/core-js/internals/define-global-property.js","webpack:///./node_modules/core-js/internals/internal-state.js","webpack:///./node_modules/core-js/internals/is-null-or-undefined.js","webpack:///./node_modules/core-js/internals/to-object.js","webpack:///./node_modules/core-js/internals/descriptors.js","webpack:///./node_modules/core-js/internals/an-object.js","webpack:///./node_modules/core-js/internals/is-object.js","webpack:///./node_modules/core-js/internals/inspect-source.js","webpack:///./node_modules/core-js/internals/uid.js","webpack:///./node_modules/core-js/internals/create-non-enumerable-property.js","webpack:///./node_modules/core-js/internals/object-define-property.js","webpack:///./node_modules/core-js/internals/to-property-key.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./node_modules/core-js/internals/v8-prototype-define-bug.js","webpack:///./node_modules/core-js/internals/well-known-symbol.js","webpack:///./node_modules/core-js/internals/to-primitive.js","webpack:///./node_modules/core-js/internals/is-pure.js","webpack:///./node_modules/core-js/internals/function-call.js","webpack:///./node_modules/core-js/internals/shared-store.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/internals/document-create-element.js","webpack:///./node_modules/core-js/internals/weak-map-basic-detection.js"],"names":["NATIVE_SYMBOL","module","exports","Symbol","sham","iterator","exec","error","global","isCallable","aFunction","argument","undefined","namespace","method","arguments","length","getBuiltIn","isPrototypeOf","USE_SYMBOL_AS_UID","$Object","Object","it","$Symbol","prototype","check","Math","globalThis","window","self","this","Function","aCallable","isNullOrUndefined","V","P","func","plain","backgroundColor","color","styles","types","style","opacity","textDecorationLine","fontStyle","fontWeight","defaultProps","Prism","prism","theme","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","source","hasOwnProperty","call","apply","newlineRe","normalizeEmptyLines","line","push","content","empty","appendTypes","add","typesSize","concat","themeToDict","language","base","create","themeDict","reduce","acc","themeEntry","languages","includes","forEach","type","accStyle","root","objectWithoutProperties","exclude","k","indexOf","Highlight","Component","this$1","args","len","props","prevTheme","prevLanguage","ref","className","output","getThemeDict","display","baseStyle","typeStyles","map","token","join","children","getStyleForToken","code","grammar","env","tokens","hooks","run","tokenize","__proto__","constructor","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","alias","splitByNewlines","split","newlineCount","i$1","pop","normalizeTokens","getLineProps","getTokenProps","NATIVE_BIND","FunctionPrototype","uncurryThisWithBind","bind","fn","makeBuiltIn","name","descriptor","get","getter","set","setter","f","shared","uid","keys","V8_VERSION","fails","$String","String","getOwnPropertySymbols","symbol","DESCRIPTORS","createElement","a","uncurryThis","hasOwn","CONFIGURABLE_FUNCTION_NAME","CONFIGURABLE","inspectSource","InternalStateModule","enforceInternalState","enforce","getInternalState","stringSlice","slice","replace","CONFIGURABLE_LENGTH","TEMPLATE","options","arity","state","toString","documentAll","document","all","toObject","$TypeError","TypeError","match","version","userAgent","process","Deno","versions","v8","navigator","test","isObject","input","pref","val","valueOf","lang","uniqueId","plainTextGrammar","_","util","encode","Token","Array","isArray","o","objId","clone","deepClone","visited","id","v","getLanguage","element","m","toLowerCase","parentElement","setLanguage","RegExp","classList","isActive","defaultActivation","no","contains","plaintext","text","txt","extend","redef","insertBefore","inside","before","insert","ret","newToken","old","DFS","callback","property","propertyType","plugins","highlight","stringify","rest","tokenList","LinkedList","addAfter","head","matchGrammar","startNode","startPos","rematch","patterns","j","cause","patternObj","lookbehind","greedy","pattern","flags","currentNode","next","pos","tail","reach","str","removeCount","matchPattern","index","from","to","p","matchStr","after","removeFrom","prev","removeRange","wrapped","nestedRematch","list","array","node","toArray","callbacks","matchedStr","lastIndex","lookbehindLength","newNode","count","s","e","tag","classes","attributes","aliases","default","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","entity","variable","toBeCopied","shell","clike","c","keyword","modName","cpp","string","css","addInlined","addAttribute","selectorInside","selector","unit","number","javascript","regex","js","comment","interpolation","coffeescript","coffee","anchorOrAlias","properties","plainKey","createValuePattern","yaml","yml","inner","createInline","tableCell","tableRow","tableLine","markdown","punctuation","walkTokens","l","codeLang","codeBlock","cls","tagPattern","parseInt","Number","fromCodePoint","known","KNOWN_ENTITY_NAMES","autoloader","Date","floor","random","loadLanguages","ele","getElementById","innerHTML","textContent","fromCharCode","md","graphql","validTokens","filter","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","offset","open","close","stackHeight","sql","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","tokenizeInterpolationExpression","expression","tempGrammar","splice","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","placeholders","substring","middle","replacement","afterTokens","Boolean","supportedLanguages","stringContent","findTemplateStrings","embedded","typescript","typeInside","ts","withId","unshift","maybeClassNameTokens","space","braces","spread","re","jsx","stringifyToken","openedTags","notTagNorBrace","openedBraces","plainText","diff","PREFIXES","prefix","git","go","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","tokenizePlaceholders","handlebars","hbs","json","webmanifest","less","makefile","objectivec","objc","ocaml","python","py","reason","function","sass","atrule","operator","important","scss","stylus","tsx","wasm","defineBuiltInAccessor","regExpFlags","RegExpPrototype","INDICES_SUPPORT","O","calls","expected","addGetter","chr","pairs","dotAll","ignoreCase","multiline","sticky","hasIndices","getOwnPropertyDescriptor","IS_PURE","store","mode","copyright","license","tryToString","bitmap","getDescriptor","EXISTS","PROPER","has","NATIVE_WEAK_MAP","createNonEnumerableProperty","sharedKey","hiddenKeys","WeakMap","metadata","facade","STATE","getterFor","TYPE","requireObjectCoercible","functionToString","postfix","definePropertyModule","createPropertyDescriptor","object","IE8_DOM_DEFINE","V8_PROTOTYPE_DEFINE_BUG","anObject","toPropertyKey","$defineProperty","$getOwnPropertyDescriptor","Attributes","current","toPrimitive","isSymbol","that","result","unicode","unicodeSets","WellKnownSymbolsStore","createWellKnownSymbol","withoutSetter","getMethod","ordinaryToPrimitive","wellKnownSymbol","TO_PRIMITIVE","exoticToPrim","defineGlobalProperty","g"],"mappings":"6FAEA,IAAIA,EAAgB,EAAQ,QAE5BC,EAAOC,QAAUF,IACXG,OAAOC,MACkB,iBAAnBD,OAAOE,U,oCCLnBJ,EAAOC,QAAU,I,oCCAjBD,EAAOC,QAAU,SAAUI,GACzB,IACE,QAASA,IACT,MAAOC,GACP,OAAO,K,oCCJX,IAAIC,EAAS,EAAQ,QACjBC,EAAa,EAAQ,QAErBC,EAAY,SAAUC,GACxB,OAAOF,EAAWE,GAAYA,OAAWC,GAG3CX,EAAOC,QAAU,SAAUW,EAAWC,GACpC,OAAOC,UAAUC,OAAS,EAAIN,EAAUF,EAAOK,IAAcL,EAAOK,IAAcL,EAAOK,GAAWC,K,oCCRtG,IAAIG,EAAa,EAAQ,QACrBR,EAAa,EAAQ,QACrBS,EAAgB,EAAQ,QACxBC,EAAoB,EAAQ,QAE5BC,EAAUC,OAEdpB,EAAOC,QAAUiB,EAAoB,SAAUG,GAC7C,MAAoB,iBAANA,GACZ,SAAUA,GACZ,IAAIC,EAAUN,EAAW,UACzB,OAAOR,EAAWc,IAAYL,EAAcK,EAAQC,UAAWJ,EAAQE,M,qCCZzE,YACA,IAAIG,EAAQ,SAAUH,GACpB,OAAOA,GAAMA,EAAGI,OAASA,MAAQJ,GAInCrB,EAAOC,QAELuB,EAA2B,iBAAdE,YAA0BA,aACvCF,EAAuB,iBAAVG,QAAsBA,SAEnCH,EAAqB,iBAARI,MAAoBA,OACjCJ,EAAuB,iBAAVjB,GAAsBA,IACnCiB,EAAqB,iBAARK,MAAoBA,OAEjC,WAAe,OAAOA,KAAtB,IAAoCC,SAAS,cAATA,K,0DCdtC,IAAIC,EAAY,EAAQ,QACpBC,EAAoB,EAAQ,QAIhChC,EAAOC,QAAU,SAAUgC,EAAGC,GAC5B,IAAIC,EAAOF,EAAEC,GACb,OAAOF,EAAkBG,QAAQxB,EAAYoB,EAAUI,K,gJC+D1C,EAnEH,CACVC,MAAO,CACLC,gBAAiB,UACjBC,MAAO,WAETC,OAAQ,CAAC,CACPC,MAAO,CAAC,UAAW,SAAU,UAAW,QAAS,eACjDC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,aACRC,MAAO,CACLC,QAAS,KAEV,CACDF,MAAO,CAAC,MAAO,WAAY,UAC3BC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,WAAY,YACpBC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,SAAU,WAAY,aAC9BC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,aACRC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,UAAW,SAAU,SAAU,MAAO,aAAc,UAAW,UAAW,YAAa,OAAQ,YAAa,QAAS,SAAU,cAAe,YACtJC,MAAO,CACLH,MAAO,YAER,CACDE,MAAO,CAAC,WACRC,MAAO,CACLE,mBAAoB,iBAErB,CACDH,MAAO,CAAC,YACRC,MAAO,CACLE,mBAAoB,cAErB,CACDH,MAAO,CAAC,UACRC,MAAO,CACLG,UAAW,WAEZ,CACDJ,MAAO,CAAC,YAAa,QACrBC,MAAO,CACLI,WAAY,SAEb,CACDL,MAAO,CAAC,aACRC,MAAO,CACLH,MAAO,c,YC/DTQ,EAAe,CAEjBC,MAAOC,EAAA,EACPC,MAAO,GAET,SAASC,EAAgBC,EAAKC,EAAKC,GAWjC,OAVID,KAAOD,EACT/B,OAAOkC,eAAeH,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAOC,EAENF,EAET,SAASO,IAYP,OAXAA,EAAWtC,OAAOuC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAI/C,UAAUC,OAAQ8C,IAAK,CACzC,IAAIC,EAAShD,UAAU+C,GACvB,IAAK,IAAIT,KAAOU,EACV1C,OAAOG,UAAUwC,eAAeC,KAAKF,EAAQV,KAC/CQ,EAAOR,GAAOU,EAAOV,IAI3B,OAAOQ,IAEOK,MAAMpC,KAAMf,WAE9B,IAAIoD,EAAY,aAEZC,EAAsB,SAAUC,GACd,IAAhBA,EAAKrD,OACPqD,EAAKC,KAAK,CACR7B,MAAO,CAAC,SACR8B,QAAS,KACTC,OAAO,IAEgB,IAAhBH,EAAKrD,QAAoC,KAApBqD,EAAK,GAAGE,UACtCF,EAAK,GAAGE,QAAU,KAClBF,EAAK,GAAGG,OAAQ,IAGhBC,EAAc,SAAUhC,EAAOiC,GACjC,IAAIC,EAAYlC,EAAMzB,OACtB,OAAI2D,EAAY,GAAKlC,EAAMkC,EAAY,KAAOD,EACrCjC,EAEFA,EAAMmC,OAAOF,IAsElBG,EAAc,SAAU3B,EAAO4B,GACjC,IAAIzC,EAAQa,EAAMb,MAEd0C,EAAO1D,OAAO2D,OAAO,MACrBC,EAAY/B,EAAMV,OAAO0C,QAAO,SAAUC,EAAKC,GACjD,IAAIC,EAAYD,EAAWC,UACvB3C,EAAQ0C,EAAW1C,MACvB,OAAI2C,IAAcA,EAAUC,SAASR,IAGrCM,EAAW3C,MAAM8C,SAAQ,SAAUC,GAEjC,IAAIC,EAAW9B,EAAS,GAAIwB,EAAIK,GAAO9C,GACvCyC,EAAIK,GAAQC,KALLN,IAQRJ,GAOH,OALAE,EAAUS,KAAOrD,EAEjB4C,EAAU5C,MAAQsB,EAAS,GAAItB,EAAO,CACpCC,gBAAiB,OAEZ2C,GAET,SAASU,EAAwBvC,EAAKwC,GACpC,IAAI/B,EAAS,GACb,IAAK,IAAIgC,KAAKzC,EAAS/B,OAAOG,UAAUwC,eAAeC,KAAKb,EAAKyC,KAA8B,IAAxBD,EAAQE,QAAQD,KAAWhC,EAAOgC,GAAKzC,EAAIyC,IAClH,OAAOhC,EAET,IAAIkC,EAAyB,SAAUC,GACrC,SAASD,IAIP,IAHA,IAAIE,EAASnE,KACToE,EAAO,GACTC,EAAMpF,UAAUC,OACXmF,KAAOD,EAAKC,GAAOpF,UAAUoF,GACpCH,EAAU9B,MAAMpC,KAAMoE,GACtB/C,EAAgBrB,KAAM,gBAAgB,SAAUsE,GAC9C,QAAyBxF,IAArBqF,EAAOhB,WAA2BmB,EAAMlD,QAAU+C,EAAOI,WAAaD,EAAMtB,WAAamB,EAAOK,aAClG,OAAOL,EAAOhB,UAEhBgB,EAAOI,UAAYD,EAAMlD,MACzB+C,EAAOK,aAAeF,EAAMtB,SAC5B,IAAIG,EAAYmB,EAAMlD,MAAQ2B,EAAYuB,EAAMlD,MAAOkD,EAAMtB,eAAYlE,EACzE,OAAOqF,EAAOhB,UAAYA,KAE5B9B,EAAgBrB,KAAM,gBAAgB,SAAUyE,GAC9C,IAAIlD,EAAMkD,EAAIlD,IACVmD,EAAYD,EAAIC,UAChB9D,EAAQ6D,EAAI7D,MAGZ+D,EAAS9C,EAAS,GAFTgC,EAAwBY,EAAK,CAAC,MAAO,YAAa,QAAS,SAExC,CAC9BC,UAAW,aACX9D,WAAO9B,EACPyC,SAAKzC,IAEHqE,EAAYgB,EAAOS,aAAaT,EAAOG,OAa3C,YAZkBxF,IAAdqE,IACFwB,EAAO/D,MAAQuC,EAAU5C,YAEbzB,IAAV8B,IACF+D,EAAO/D,WAAyB9B,IAAjB6F,EAAO/D,MAAsBiB,EAAS,GAAI8C,EAAO/D,MAAOA,GAASA,QAEtE9B,IAARyC,IACFoD,EAAOpD,IAAMA,GAEXmD,IACFC,EAAOD,WAAa,IAAMA,GAErBC,KAETtD,EAAgBrB,KAAM,oBAAoB,SAAUyE,GAClD,IAAI9D,EAAQ8D,EAAI9D,MACZ+B,EAAQ+B,EAAI/B,MACZG,EAAYlC,EAAMzB,OAClBiE,EAAYgB,EAAOS,aAAaT,EAAOG,OAC3C,QAAkBxF,IAAdqE,EAAJ,CAEO,GAAkB,IAAdN,GAAgC,UAAblC,EAAM,GAClC,OAAO+B,EAAQ,CACbmC,QAAS,qBACP/F,EACC,GAAkB,IAAd+D,IAAoBH,EAC7B,OAAOS,EAAUxC,EAAM,IAEzB,IAAImE,EAAYpC,EAAQ,CACtBmC,QAAS,gBACP,GAEAE,EAAapE,EAAMqE,KAAI,SAAUtB,GACnC,OAAOP,EAAUO,MAEnB,OAAOnE,OAAOuC,OAAOM,MAAM7C,OAAQ,CAACuF,GAAWhC,OAAOiC,QAExD1D,EAAgBrB,KAAM,iBAAiB,SAAUyE,GAC/C,IAAIlD,EAAMkD,EAAIlD,IACVmD,EAAYD,EAAIC,UAChB9D,EAAQ6D,EAAI7D,MACZqE,EAAQR,EAAIQ,MAGZN,EAAS9C,EAAS,GAFTgC,EAAwBY,EAAK,CAAC,MAAO,YAAa,QAAS,UAExC,CAC9BC,UAAW,SAAWO,EAAMtE,MAAMuE,KAAK,KACvCC,SAAUF,EAAMxC,QAChB7B,MAAOuD,EAAOiB,iBAAiBH,GAC/B1D,SAAKzC,IAWP,YATcA,IAAV8B,IACF+D,EAAO/D,WAAyB9B,IAAjB6F,EAAO/D,MAAsBiB,EAAS,GAAI8C,EAAO/D,MAAOA,GAASA,QAEtE9B,IAARyC,IACFoD,EAAOpD,IAAMA,GAEXmD,IACFC,EAAOD,WAAa,IAAMA,GAErBC,KAETtD,EAAgBrB,KAAM,YAAY,SAAUkB,EAAOmE,EAAMC,EAAStC,GAChE,IAAIuC,EAAM,CACRF,KAAMA,EACNC,QAASA,EACTtC,SAAUA,EACVwC,OAAQ,IAEVtE,EAAMuE,MAAMC,IAAI,kBAAmBH,GACnC,IAAIC,EAASD,EAAIC,OAAStE,EAAMyE,SAASJ,EAAIF,KAAME,EAAID,QAASC,EAAIvC,UAEpE,OADA9B,EAAMuE,MAAMC,IAAI,iBAAkBH,GAC3BC,KAwBX,OArBItB,IAAWD,EAAU2B,UAAY1B,GACrCD,EAAUvE,UAAYH,OAAO2D,OAAOgB,GAAaA,EAAUxE,WAC3DuE,EAAUvE,UAAUmG,YAAc5B,EAClCA,EAAUvE,UAAUoG,OAAS,WAC3B,IAAIrB,EAAMzE,KAAKsE,MACXpD,EAAQuD,EAAIvD,MACZ8B,EAAWyB,EAAIzB,SACfqC,EAAOZ,EAAIY,KACXF,EAAWV,EAAIU,SACfhC,EAAYnD,KAAK4E,aAAa5E,KAAKsE,OACnCgB,EAAUpE,EAAMqC,UAAUP,GAG9B,OAAOmC,EAAS,CACdK,OAhNgB,SAAUA,GAS9B,IARA,IAAIO,EAAe,CAAC,IAChBC,EAAgB,CAACR,GACjBS,EAAqB,CAAC,GACtBC,EAAoB,CAACV,EAAOtG,QAC5B8C,EAAI,EACJmE,EAAa,EACbC,EAAc,GACd/C,EAAM,CAAC+C,GACJD,GAAc,GAAG,CACtB,MAAQnE,EAAIiE,EAAmBE,MAAiBD,EAAkBC,IAAa,CAC7E,IAAI1D,OAAU,EACV9B,EAAQoF,EAAaI,GAErBlB,EADWe,EAAcG,GACRnE,GAarB,GAXqB,iBAAViD,GACTtE,EAAQwF,EAAa,EAAIxF,EAAQ,CAAC,SAClC8B,EAAUwC,IAEVtE,EAAQgC,EAAYhC,EAAOsE,EAAMvB,MAC7BuB,EAAMoB,QACR1F,EAAQgC,EAAYhC,EAAOsE,EAAMoB,QAEnC5D,EAAUwC,EAAMxC,SAGK,iBAAZA,EAAX,CASA,IAAI6D,EAAkB7D,EAAQ8D,MAAMlE,GAChCmE,EAAeF,EAAgBpH,OACnCkH,EAAY5D,KAAK,CACf7B,MAAOA,EACP8B,QAAS6D,EAAgB,KAG3B,IAAK,IAAIG,EAAM,EAAGA,EAAMD,EAAcC,IACpCnE,EAAoB8D,GACpB/C,EAAIb,KAAK4D,EAAc,IACvBA,EAAY5D,KAAK,CACf7B,MAAOA,EACP8B,QAAS6D,EAAgBG,UApB3BN,IACAJ,EAAavD,KAAK7B,GAClBqF,EAAcxD,KAAKC,GACnBwD,EAAmBzD,KAAK,GACxB0D,EAAkB1D,KAAKC,EAAQvD,QAqBnCiH,IACAJ,EAAaW,MACbV,EAAcU,MACdT,EAAmBS,MACnBR,EAAkBQ,MAGpB,OADApE,EAAoB8D,GACb/C,EAkJQsD,MADiB7H,IAAZwG,EAAwBtF,KAAK2F,SAASzE,EAAOmE,EAAMC,EAAStC,GAAY,CAACqC,IAIzFX,UAAW,uBAAyB1B,EACpCpC,WAAqB9B,IAAdqE,EAA0BA,EAAUS,KAAO,GAClDgD,aAAc5G,KAAK4G,aACnBC,cAAe7G,KAAK6G,iBAGjB5C,EA3HoB,CA4H3B,aACa,a,oCCvRf,IAAI6C,EAAc,EAAQ,QAEtBC,EAAoB9G,SAASP,UAC7ByC,EAAO4E,EAAkB5E,KACzB6E,EAAsBF,GAAeC,EAAkBE,KAAKA,KAAK9E,EAAMA,GAE3EhE,EAAOC,QAAU0I,EAAcE,EAAsB,SAAUE,GAC7D,OAAO,WACL,OAAO/E,EAAKC,MAAM8E,EAAIjI,c,oCCR1B,IAAIkI,EAAc,EAAQ,QACtB1F,EAAiB,EAAQ,QAE7BtD,EAAOC,QAAU,SAAU2D,EAAQqF,EAAMC,GAGvC,OAFIA,EAAWC,KAAKH,EAAYE,EAAWC,IAAKF,EAAM,CAAEG,QAAQ,IAC5DF,EAAWG,KAAKL,EAAYE,EAAWG,IAAKJ,EAAM,CAAEK,QAAQ,IACzDhG,EAAeiG,EAAE3F,EAAQqF,EAAMC,K,oCCNxC,IAAIM,EAAS,EAAQ,QACjBC,EAAM,EAAQ,QAEdC,EAAOF,EAAO,QAElBxJ,EAAOC,QAAU,SAAUmD,GACzB,OAAOsG,EAAKtG,KAASsG,EAAKtG,GAAOqG,EAAIrG,M,kCCLvC,IAAIuG,EAAa,EAAQ,QACrBC,EAAQ,EAAQ,QAGhBC,EAFS,EAAQ,QAEAC,OAGrB9J,EAAOC,UAAYmB,OAAO2I,wBAA0BH,GAAM,WACxD,IAAII,EAAS9J,OAAO,oBAKpB,OAAQ2J,EAAQG,MAAa5I,OAAO4I,aAAmB9J,UAEpDA,OAAOC,MAAQwJ,GAAcA,EAAa,O,kCChB/C,IAAIM,EAAc,EAAQ,QACtBL,EAAQ,EAAQ,QAChBM,EAAgB,EAAQ,QAG5BlK,EAAOC,SAAWgK,IAAgBL,GAAM,WAEtC,OAES,IAFFxI,OAAOkC,eAAe4G,EAAc,OAAQ,IAAK,CACtDf,IAAK,WAAc,OAAO,KACzBgB,M,kCCTL,IAAIN,EAAUC,OAEd9J,EAAOC,QAAU,SAAUS,GACzB,IACE,OAAOmJ,EAAQnJ,GACf,MAAOJ,GACP,MAAO,Y,kCCNX,IAAI8J,EAAc,EAAQ,QACtBR,EAAQ,EAAQ,QAChBpJ,EAAa,EAAQ,QACrB6J,EAAS,EAAQ,QACjBJ,EAAc,EAAQ,QACtBK,EAA6B,EAAQ,QAA8BC,aACnEC,EAAgB,EAAQ,QACxBC,EAAsB,EAAQ,QAE9BC,EAAuBD,EAAoBE,QAC3CC,EAAmBH,EAAoBtB,IACvCU,EAAUC,OAEVxG,EAAiBlC,OAAOkC,eACxBuH,EAAcT,EAAY,GAAGU,OAC7BC,EAAUX,EAAY,GAAGW,SACzBhE,EAAOqD,EAAY,GAAGrD,MAEtBiE,EAAsBf,IAAgBL,GAAM,WAC9C,OAAsF,IAA/EtG,GAAe,cAA6B,SAAU,CAAED,MAAO,IAAKtC,UAGzEkK,EAAWnB,OAAOA,QAAQ1B,MAAM,UAEhCY,EAAchJ,EAAOC,QAAU,SAAUoD,EAAO4F,EAAMiC,GACf,YAArCL,EAAYhB,EAAQZ,GAAO,EAAG,KAChCA,EAAO,IAAM8B,EAAQlB,EAAQZ,GAAO,qBAAsB,MAAQ,KAEhEiC,GAAWA,EAAQ9B,SAAQH,EAAO,OAASA,GAC3CiC,GAAWA,EAAQ5B,SAAQL,EAAO,OAASA,KAC1CoB,EAAOhH,EAAO,SAAYiH,GAA8BjH,EAAM4F,OAASA,KACtEgB,EAAa3G,EAAeD,EAAO,OAAQ,CAAEA,MAAO4F,EAAMzF,cAAc,IACvEH,EAAM4F,KAAOA,GAEhB+B,GAAuBE,GAAWb,EAAOa,EAAS,UAAY7H,EAAMtC,SAAWmK,EAAQC,OACzF7H,EAAeD,EAAO,SAAU,CAAEA,MAAO6H,EAAQC,QAEnD,IACMD,GAAWb,EAAOa,EAAS,gBAAkBA,EAAQxD,YACnDuC,GAAa3G,EAAeD,EAAO,YAAa,CAAEI,UAAU,IAEvDJ,EAAM9B,YAAW8B,EAAM9B,eAAYZ,GAC9C,MAAOL,IACT,IAAI8K,EAAQV,EAAqBrH,GAG/B,OAFGgH,EAAOe,EAAO,YACjBA,EAAMtH,OAASiD,EAAKkE,EAAyB,iBAARhC,EAAmBA,EAAO,KACxD5F,GAKXvB,SAASP,UAAU8J,SAAWrC,GAAY,WACxC,OAAOxI,EAAWqB,OAAS+I,EAAiB/I,MAAMiC,QAAU0G,EAAc3I,QACzE,a,kCCpDH,IAAIyJ,EAAiC,iBAAZC,UAAwBA,SAASC,IAK1DxL,EAAOC,aAAgC,IAAfqL,QAA8C3K,IAAhB2K,EAA4B,SAAU5K,GAC1F,MAA0B,mBAAZA,GAA0BA,IAAa4K,GACnD,SAAU5K,GACZ,MAA0B,mBAAZA,I,kCCThB,IAAI0J,EAAc,EAAQ,QACtBqB,EAAW,EAAQ,QAEnB1H,EAAiBqG,EAAY,GAAGrG,gBAKpC/D,EAAOC,QAAUmB,OAAOiJ,QAAU,SAAgBhJ,EAAI+B,GACpD,OAAOW,EAAe0H,EAASpK,GAAK+B,K,kCCTtC,IAAIpB,EAAoB,EAAQ,QAE5B0J,EAAaC,UAIjB3L,EAAOC,QAAU,SAAUoB,GACzB,GAAIW,EAAkBX,GAAK,MAAM,IAAIqK,EAAW,wBAA0BrK,GAC1E,OAAOA,I,kCCRT,IAOIuK,EAAOC,EAPPtL,EAAS,EAAQ,QACjBuL,EAAY,EAAQ,QAEpBC,EAAUxL,EAAOwL,QACjBC,EAAOzL,EAAOyL,KACdC,EAAWF,GAAWA,EAAQE,UAAYD,GAAQA,EAAKH,QACvDK,EAAKD,GAAYA,EAASC,GAG1BA,IAIFL,GAHAD,EAAQM,EAAG9D,MAAM,MAGD,GAAK,GAAKwD,EAAM,GAAK,EAAI,IAAMA,EAAM,GAAKA,EAAM,MAK7DC,GAAWC,MACdF,EAAQE,EAAUF,MAAM,iBACVA,EAAM,IAAM,MACxBA,EAAQE,EAAUF,MAAM,oBACbC,GAAWD,EAAM,IAIhC5L,EAAOC,QAAU4L,G,oCC1BjB7L,EAAOC,QAA8B,oBAAbkM,WAA4BrC,OAAOqC,UAAUL,YAAc,I,kCCAnF,IAAI1B,EAAc,EAAQ,QAE1BpK,EAAOC,QAAUmK,EAAY,GAAGnJ,gB,kCCFhC,IAAI2I,EAAQ,EAAQ,QAEpB5J,EAAOC,SAAW2J,GAAM,WAEtB,IAAIwC,EAAO,aAA8BtD,OAEzC,MAAsB,mBAARsD,GAAsBA,EAAKrI,eAAe,iB,kCCN1D,IAAIC,EAAO,EAAQ,QACfxD,EAAa,EAAQ,QACrB6L,EAAW,EAAQ,QAEnBX,EAAaC,UAIjB3L,EAAOC,QAAU,SAAUqM,EAAOC,GAChC,IAAIxD,EAAIyD,EACR,GAAa,WAATD,GAAqB/L,EAAWuI,EAAKuD,EAAMjB,YAAcgB,EAASG,EAAMxI,EAAK+E,EAAIuD,IAAS,OAAOE,EACrG,GAAIhM,EAAWuI,EAAKuD,EAAMG,WAAaJ,EAASG,EAAMxI,EAAK+E,EAAIuD,IAAS,OAAOE,EAC/E,GAAa,WAATD,GAAqB/L,EAAWuI,EAAKuD,EAAMjB,YAAcgB,EAASG,EAAMxI,EAAK+E,EAAIuD,IAAS,OAAOE,EACrG,MAAM,IAAId,EAAW,6C,kCCdvB,cAoBI3I,EAAQ,WAEV,IAAI2J,EAAO,0CACPC,EAAW,EAGXC,EAAmB,GACnBC,EAAI,CAUNC,KAAM,CACJC,OAAQ,SAASA,EAAO1F,GACtB,OAAIA,aAAkB2F,EACb,IAAIA,EAAM3F,EAAO9B,KAAMwH,EAAO1F,EAAO/C,SAAU+C,EAAOa,OACpD+E,MAAMC,QAAQ7F,GAChBA,EAAOR,IAAIkG,GAEX1F,EAAO0D,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,UAAW,MAmBlFxF,KAAM,SAAU4H,GACd,OAAO/L,OAAOG,UAAU8J,SAASrH,KAAKmJ,GAAGrC,MAAM,GAAI,IAQrDsC,MAAO,SAAUjK,GAMf,OALKA,EAAU,MACb/B,OAAOkC,eAAeH,EAAK,OAAQ,CACjCE,QAASsJ,IAGNxJ,EAAU,MAYnBkK,MAAO,SAASC,EAAUH,EAAGI,GAE3B,IAAIF,EACAG,EACJ,OAHAD,EAAUA,GAAW,GAGbV,EAAEC,KAAKvH,KAAK4H,IAClB,IAAK,SAEH,GADAK,EAAKX,EAAEC,KAAKM,MAAMD,GACdI,EAAQC,GACV,OAAOD,EAAQC,GAIjB,IAAK,IAAIpK,KAFTiK,EAA0C,GAC1CE,EAAQC,GAAMH,EACEF,EACVA,EAAEpJ,eAAeX,KACnBiK,EAAMjK,GAAOkK,EAAUH,EAAE/J,GAAMmK,IAGnC,OAAyBF,EAC3B,IAAK,QAEH,OADAG,EAAKX,EAAEC,KAAKM,MAAMD,GACdI,EAAQC,GACHD,EAAQC,IAEjBH,EAAQ,GACRE,EAAQC,GAAMH,EACd,EAA4C/H,SAAQ,SAAUmI,EAAG5J,GAC/DwJ,EAAMxJ,GAAKyJ,EAAUG,EAAGF,MAEDF,GAC3B,QACE,OAAOF,IAWbO,YAAa,SAAUC,GACrB,KAAOA,GAAS,CACd,IAAIC,EAAIlB,EAAKrM,KAAKsN,EAAQpH,WAC1B,GAAIqH,EACF,OAAOA,EAAE,GAAGC,cAEdF,EAAUA,EAAQG,cAEpB,MAAO,QASTC,YAAa,SAAUJ,EAAS9I,GAG9B8I,EAAQpH,UAAYoH,EAAQpH,UAAUwE,QAAQiD,OAAOtB,EAAM,MAAO,IAIlEiB,EAAQM,UAAUxJ,IAAI,YAAcI,IAqBtCqJ,SAAU,SAAUP,EAASpH,EAAW4H,GAEtC,IADA,IAAIC,EAAK,MAAQ7H,EACVoH,GAAS,CACd,IAAIM,EAAYN,EAAQM,UACxB,GAAIA,EAAUI,SAAS9H,GACrB,OAAO,EAET,GAAI0H,EAAUI,SAASD,GACrB,OAAO,EAETT,EAAUA,EAAQG,cAEpB,QAASK,IAUb/I,UAAW,CAIThD,MAAOwK,EACP0B,UAAW1B,EACX2B,KAAM3B,EACN4B,IAAK5B,EA6BL6B,OAAQ,SAAUjB,EAAIkB,GACpB,IAAIhC,EAAOG,EAAEC,KAAKO,MAAMR,EAAEzH,UAAUoI,IACpC,IAAK,IAAIpK,KAAOsL,EACdhC,EAAKtJ,GAAOsL,EAAMtL,GAEpB,OAAOsJ,GA6ETiC,aAAc,SAAUC,EAAQC,EAAQC,EAAQrJ,GAE9C,IAAI0B,GADJ1B,EAAOA,GAA4BoH,EAAW,WAC3B+B,GAEfG,EAAM,GACV,IAAK,IAAIjI,KAASK,EAChB,GAAIA,EAAQpD,eAAe+C,GAAQ,CACjC,GAAIA,GAAS+H,EACX,IAAK,IAAIG,KAAYF,EACfA,EAAO/K,eAAeiL,KACxBD,EAAIC,GAAYF,EAAOE,IAMxBF,EAAO/K,eAAe+C,KACzBiI,EAAIjI,GAASK,EAAQL,IAI3B,IAAImI,EAAMxJ,EAAKmJ,GASf,OARAnJ,EAAKmJ,GAAUG,EAGflC,EAAEzH,UAAU8J,IAAIrC,EAAEzH,WAAW,SAAUhC,EAAKC,GACtCA,IAAU4L,GAAO7L,GAAOwL,IAC1B/M,KAAKuB,GAAO2L,MAGTA,GAGTG,IAAK,SAASA,EAAI/B,EAAGgC,EAAU5J,EAAMgI,GACnCA,EAAUA,GAAW,GACrB,IAAIH,EAAQP,EAAEC,KAAKM,MACnB,IAAK,IAAIvJ,KAAKsJ,EACZ,GAAIA,EAAEpJ,eAAeF,GAAI,CACvBsL,EAASnL,KAAKmJ,EAAGtJ,EAAGsJ,EAAEtJ,GAAI0B,GAAQ1B,GAClC,IAAIuL,EAAWjC,EAAEtJ,GACbwL,EAAexC,EAAEC,KAAKvH,KAAK6J,GACV,WAAjBC,GAA8B9B,EAAQH,EAAMgC,IAGpB,UAAjBC,GAA6B9B,EAAQH,EAAMgC,MACpD7B,EAAQH,EAAMgC,KAAa,EAC3BF,EAAIE,EAAUD,EAAUtL,EAAG0J,KAJ3BA,EAAQH,EAAMgC,KAAa,EAC3BF,EAAIE,EAAUD,EAAU,KAAM5B,OASxC+B,QAAS,GAqBTC,UAAW,SAAUhB,EAAMpH,EAAStC,GAClC,IAAIuC,EAAM,CACRF,KAAMqH,EACNpH,QAASA,EACTtC,SAAUA,GAKZ,OAHAgI,EAAEvF,MAAMC,IAAI,kBAAmBH,GAC/BA,EAAIC,OAASwF,EAAErF,SAASJ,EAAIF,KAAME,EAAID,SACtC0F,EAAEvF,MAAMC,IAAI,iBAAkBH,GACvB4F,EAAMwC,UAAU3C,EAAEC,KAAKC,OAAO3F,EAAIC,QAASD,EAAIvC,WA0BxD2C,SAAU,SAAU+G,EAAMpH,GACxB,IAAIsI,EAAOtI,EAAQsI,KACnB,GAAIA,EAAM,CACR,IAAK,IAAI3I,KAAS2I,EAChBtI,EAAQL,GAAS2I,EAAK3I,UAEjBK,EAAQsI,KAEjB,IAAIC,EAAY,IAAIC,EAGpB,OAFAC,EAASF,EAAWA,EAAUG,KAAMtB,GAkMxC,SAASuB,EAAavB,EAAMmB,EAAWvI,EAAS4I,EAAWC,EAAUC,GACnE,IAAK,IAAInJ,KAASK,EAChB,GAAKA,EAAQpD,eAAe+C,IAAWK,EAAQL,GAA/C,CAGA,IAAIoJ,EAAW/I,EAAQL,GACvBoJ,EAAWjD,MAAMC,QAAQgD,GAAYA,EAAW,CAACA,GACjD,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAASnP,SAAUoP,EAAG,CACxC,GAAIF,GAAWA,EAAQG,OAAStJ,EAAQ,IAAMqJ,EAC5C,OAEF,IAAIE,EAAaH,EAASC,GACtBvB,EAASyB,EAAWzB,OACpB0B,IAAeD,EAAWC,WAC1BC,IAAWF,EAAWE,OACtBrI,EAAQmI,EAAWnI,MACvB,GAAIqI,IAAWF,EAAWG,QAAQjQ,OAAQ,CAExC,IAAIkQ,EAAQJ,EAAWG,QAAQnF,WAAWO,MAAM,aAAa,GAC7DyE,EAAWG,QAAUxC,OAAOqC,EAAWG,QAAQ1M,OAAQ2M,EAAQ,KAKjE,IADA,IAAID,EAAUH,EAAWG,SAAWH,EAGhCK,EAAcX,EAAUY,KAAMC,EAAMZ,EAAUU,IAAgBhB,EAAUmB,QACtEZ,GAAWW,GAAOX,EAAQa,OADkDF,GAAOF,EAAYrN,MAAMtC,OAAQ2P,EAAcA,EAAYC,KAAM,CAIjJ,IAAII,EAAML,EAAYrN,MACtB,GAAIqM,EAAU3O,OAASwN,EAAKxN,OAE1B,OAEF,KAAIgQ,aAAe/D,GAAnB,CAGA,IACIpB,EADAoF,EAAc,EAElB,GAAIT,EAAQ,CAEV,KADA3E,EAAQqF,EAAaT,EAASI,EAAKrC,EAAM+B,KAC3B1E,EAAMsF,OAAS3C,EAAKxN,OAChC,MAEF,IAAIoQ,EAAOvF,EAAMsF,MACbE,EAAKxF,EAAMsF,MAAQtF,EAAM,GAAG7K,OAC5BsQ,EAAIT,EAIR,IADAS,GAAKX,EAAYrN,MAAMtC,OAChBoQ,GAAQE,GACbX,EAAcA,EAAYC,KAC1BU,GAAKX,EAAYrN,MAAMtC,OAOzB,GAJAsQ,GAAKX,EAAYrN,MAAMtC,OACvB6P,EAAMS,EAGFX,EAAYrN,iBAAiB2J,EAC/B,SAIF,IAAK,IAAIpH,EAAI8K,EAAa9K,IAAM8J,EAAUmB,OAASQ,EAAID,GAAyB,iBAAZxL,EAAEvC,OAAqBuC,EAAIA,EAAE+K,KAC/FK,IACAK,GAAKzL,EAAEvC,MAAMtC,OAEfiQ,IAGAD,EAAMxC,EAAKzD,MAAM8F,EAAKS,GACtBzF,EAAMsF,OAASN,OAGf,KADAhF,EAAQqF,EAAaT,EAAS,EAAGO,EAAKT,IAEpC,SAKAa,EAAOvF,EAAMsF,MAAjB,IACII,EAAW1F,EAAM,GACjBiD,EAASkC,EAAIjG,MAAM,EAAGqG,GACtBI,EAAQR,EAAIjG,MAAMqG,EAAOG,EAASvQ,QAClC+P,EAAQF,EAAMG,EAAIhQ,OAClBkP,GAAWa,EAAQb,EAAQa,QAC7Bb,EAAQa,MAAQA,GAElB,IAAIU,EAAad,EAAYe,KACzB5C,IACF2C,EAAa5B,EAASF,EAAW8B,EAAY3C,GAC7C+B,GAAO/B,EAAO9N,QAEhB2Q,EAAYhC,EAAW8B,EAAYR,GACnC,IAAIW,EAAU,IAAI3E,EAAMlG,EAAO8H,EAAS/B,EAAErF,SAAS8J,EAAU1C,GAAU0C,EAAUpJ,EAAOoJ,GAKxF,GAJAZ,EAAcd,EAASF,EAAW8B,EAAYG,GAC1CJ,GACF3B,EAASF,EAAWgB,EAAaa,GAE/BP,EAAc,EAAG,CAKnB,IAAIY,EAAgB,CAClBxB,MAAOtJ,EAAQ,IAAMqJ,EACrBW,MAAOA,GAEThB,EAAavB,EAAMmB,EAAWvI,EAASuJ,EAAYe,KAAMb,EAAKgB,GAG1D3B,GAAW2B,EAAcd,MAAQb,EAAQa,QAC3Cb,EAAQa,MAAQc,EAAcd,YAnTtChB,CAAavB,EAAMmB,EAAWvI,EAASuI,EAAUG,KAAM,GA0Y3D,SAAiBgC,GACf,IAAIC,EAAQ,GACRC,EAAOF,EAAKhC,KAAKc,KACrB,KAAOoB,IAASF,EAAKhB,MACnBiB,EAAMzN,KAAK0N,EAAK1O,OAChB0O,EAAOA,EAAKpB,KAEd,OAAOmB,EAhZEE,CAAQtC,IAOjBpI,MAAO,CACLkE,IAAK,GAaL/G,IAAK,SAAUwE,EAAMkG,GACnB,IAAI7H,EAAQuF,EAAEvF,MAAMkE,IACpBlE,EAAM2B,GAAQ3B,EAAM2B,IAAS,GAC7B3B,EAAM2B,GAAM5E,KAAK8K,IAWnB5H,IAAK,SAAU0B,EAAM7B,GACnB,IAAI6K,EAAYpF,EAAEvF,MAAMkE,IAAIvC,GAC5B,GAAKgJ,GAAcA,EAAUlR,OAG7B,IAAK,IAAWoO,EAAPtL,EAAI,EAAasL,EAAW8C,EAAUpO,MAC7CsL,EAAS/H,KAIf4F,MAAOA,GAmBT,SAASA,EAAMzH,EAAMjB,EAAS4D,EAAOgK,GAUnCrQ,KAAK0D,KAAOA,EASZ1D,KAAKyC,QAAUA,EAQfzC,KAAKqG,MAAQA,EAEbrG,KAAKd,OAAqC,GAA3BmR,GAAc,IAAInR,OAyEnC,SAASkQ,EAAaT,EAASI,EAAKrC,EAAM+B,GACxCE,EAAQ2B,UAAYvB,EACpB,IAAIhF,EAAQ4E,EAAQnQ,KAAKkO,GACzB,GAAI3C,GAAS0E,GAAc1E,EAAM,GAAI,CAEnC,IAAIwG,EAAmBxG,EAAM,GAAG7K,OAChC6K,EAAMsF,OAASkB,EACfxG,EAAM,GAAKA,EAAM,GAAGd,MAAMsH,GAE5B,OAAOxG,EAwJT,SAAS+D,IAEP,IAAIE,EAAO,CACTxM,MAAO,KACPoO,KAAM,KACNd,KAAM,MAGJE,EAAO,CACTxN,MAAO,KACPoO,KAAM5B,EACNc,KAAM,MAERd,EAAKc,KAAOE,EAGZhP,KAAKgO,KAAOA,EAEZhO,KAAKgP,KAAOA,EACZhP,KAAKd,OAAS,EAYhB,SAAS6O,EAASiC,EAAME,EAAM1O,GAE5B,IAAIsN,EAAOoB,EAAKpB,KACZ0B,EAAU,CACZhP,MAAOA,EACPoO,KAAMM,EACNpB,KAAMA,GAKR,OAHAoB,EAAKpB,KAAO0B,EACZ1B,EAAKc,KAAOY,EACZR,EAAK9Q,SACEsR,EAUT,SAASX,EAAYG,EAAME,EAAMO,GAE/B,IADA,IAAI3B,EAAOoB,EAAKpB,KACP9M,EAAI,EAAGA,EAAIyO,GAAS3B,IAASkB,EAAKhB,KAAMhN,IAC/C8M,EAAOA,EAAKA,KAEdoB,EAAKpB,KAAOA,EACZA,EAAKc,KAAOM,EACZF,EAAK9Q,QAAU8C,EAgBjB,OAtRAmJ,EAAMwC,UAAY,SAASA,EAAUrC,EAAGtI,GACtC,GAAgB,iBAALsI,EACT,OAAOA,EAET,GAAIF,MAAMC,QAAQC,GAAI,CACpB,IAAIoF,EAAI,GAIR,OAHApF,EAAE7H,SAAQ,SAAUkN,GAClBD,GAAK/C,EAAUgD,EAAG3N,MAEb0N,EAET,IAAInL,EAAM,CACR7B,KAAM4H,EAAE5H,KACRjB,QAASkL,EAAUrC,EAAE7I,QAASO,GAC9B4N,IAAK,OACLC,QAAS,CAAC,QAASvF,EAAE5H,MACrBoN,WAAY,GACZ9N,SAAUA,GAER+N,EAAUzF,EAAEjF,MACZ0K,IACE3F,MAAMC,QAAQ0F,GAChB3F,MAAM1L,UAAU8C,KAAKJ,MAAMmD,EAAIsL,QAASE,GAExCxL,EAAIsL,QAAQrO,KAAKuO,IAGrB/F,EAAEvF,MAAMC,IAAI,OAAQH,GACpB,IAAIuL,EAAa,GACjB,IAAK,IAAI1J,KAAQ7B,EAAIuL,WACnBA,GAAc,IAAM1J,EAAO,MAAQ7B,EAAIuL,WAAW1J,IAAS,IAAI8B,QAAQ,KAAM,UAAY,IAE3F,MAAO,IAAM3D,EAAIqL,IAAM,WAAarL,EAAIsL,QAAQ3L,KAAK,KAAO,IAAM4L,EAAa,IAAMvL,EAAI9C,QAAU,KAAO8C,EAAIqL,IAAM,KAsP/G5F,EAjzBG,GAmzBR7J,EAAQD,EACZA,EAAM8P,QAAU9P,EAMhBC,EAAMoC,UAAU0N,OAAS,CACvB,QAAW,CACTtC,QAAS,8BACTD,QAAQ,GAEV,OAAU,CACRC,QAAS,iBACTD,QAAQ,GAEV,QAAW,CAETC,QAAS,uHACTD,QAAQ,EACR3B,OAAQ,CACN,kBAAmB,CACjB4B,QAAS,6BACTF,YAAY,EACZC,QAAQ,EACR3B,OAAQ,MAEV,OAAU,CACR4B,QAAS,kBACTD,QAAQ,GAEV,YAAe,eACf,cAAe,YACf,KAAQ,eAGZ,MAAS,CACPC,QAAS,4BACTD,QAAQ,GAEV,IAAO,CACLC,QAAS,uHACTD,QAAQ,EACR3B,OAAQ,CACN,IAAO,CACL4B,QAAS,iBACT5B,OAAQ,CACN,YAAe,QACf,UAAa,iBAGjB,eAAgB,GAChB,aAAc,CACZ4B,QAAS,qCACT5B,OAAQ,CACN,YAAe,CAAC,CACd4B,QAAS,KACTtI,MAAO,eACN,SAGP,YAAe,OACf,YAAa,CACXsI,QAAS,YACT5B,OAAQ,CACN,UAAa,mBAKrB,OAAU,CAAC,CACT4B,QAAS,kBACTtI,MAAO,gBACN,uBAELlF,EAAMoC,UAAU0N,OAAY,IAAElE,OAAO,cAAcA,OAAe,OAAI5L,EAAMoC,UAAU0N,OAAe,OACrG9P,EAAMoC,UAAU0N,OAAgB,QAAElE,OAAO,mBAAmBA,OAAS5L,EAAMoC,UAAU0N,OAErF9P,EAAMsE,MAAM7C,IAAI,QAAQ,SAAU2C,GACf,WAAbA,EAAI7B,OACN6B,EAAIuL,WAAkB,MAAIvL,EAAI9C,QAAQyG,QAAQ,QAAS,SAG3D3J,OAAOkC,eAAeN,EAAMoC,UAAU0N,OAAOL,IAAK,aAAc,CAY9DpP,MAAO,SAAoB0P,EAASrG,GAClC,IAAIsG,EAAsB,GAC1BA,EAAoB,YAActG,GAAQ,CACxC8D,QAAS,oCACTF,YAAY,EACZ1B,OAAQ5L,EAAMoC,UAAUsH,IAE1BsG,EAA2B,MAAI,uBAC/B,IAAIpE,EAAS,CACX,iBAAkB,CAChB4B,QAAS,4BACT5B,OAAQoE,IAGZpE,EAAO,YAAclC,GAAQ,CAC3B8D,QAAS,UACT5B,OAAQ5L,EAAMoC,UAAUsH,IAE1B,IAAIuG,EAAM,GACVA,EAAIF,GAAW,CACbvC,QAASxC,OAAO,wFAAwFlK,OAAOiH,QAAQ,OAAO,WAC5H,OAAOgI,KACL,KACJzC,YAAY,EACZC,QAAQ,EACR3B,OAAQA,GAEV5L,EAAMoC,UAAUuJ,aAAa,SAAU,QAASsE,MAGpD7R,OAAOkC,eAAeN,EAAMoC,UAAU0N,OAAOL,IAAK,eAAgB,CAYhEpP,MAAO,SAAU6P,EAAUxG,GACzB1J,EAAMoC,UAAU0N,OAAOL,IAAI7D,OAAO,gBAAgBvK,KAAK,CACrDmM,QAASxC,OAAO,aAAalK,OAAS,MAAQoP,EAAW,IAAM,iDAAiDpP,OAAQ,KACxHwM,YAAY,EACZ1B,OAAQ,CACN,YAAa,WACb,aAAc,CACZ4B,QAAS,WACT5B,OAAQ,CACN,MAAS,CACP4B,QAAS,yCACTF,YAAY,EACZpI,MAAO,CAACwE,EAAM,YAAcA,GAC5BkC,OAAQ5L,EAAMoC,UAAUsH,IAE1B,YAAe,CAAC,CACd8D,QAAS,KACTtI,MAAO,eACN,eAOflF,EAAMoC,UAAU+N,KAAOnQ,EAAMoC,UAAU0N,OACvC9P,EAAMoC,UAAUgO,OAASpQ,EAAMoC,UAAU0N,OACzC9P,EAAMoC,UAAUiO,IAAMrQ,EAAMoC,UAAU0N,OACtC9P,EAAMoC,UAAUkO,IAAMtQ,EAAMoC,UAAUqJ,OAAO,SAAU,IACvDzL,EAAMoC,UAAUmO,KAAOvQ,EAAMoC,UAAUkO,IACvCtQ,EAAMoC,UAAUoO,KAAOxQ,EAAMoC,UAAUkO,IACvCtQ,EAAMoC,UAAUqO,IAAMzQ,EAAMoC,UAAUkO,IAGtC,SAAWvQ,GAKT,IAAI2Q,EAAU,0oCACVC,EAAsB,CACxBnD,QAAS,4BACTF,YAAY,EACZpI,MAAO,cAEP0G,OAAQ,MAENgF,EAAe,CACjB,KAAQD,EACR,YAAe,CACbnD,QAASxC,OAAO,MAAQ0F,GACxBxL,MAAO,YAET,SAAY,CAEZ,CACEsI,QAAS,sBACTD,QAAQ,EACR3B,OAAQ,CAEN,SAAY,CAAC,CACX4B,QAAS,uBACTF,YAAY,GACX,WACH,OAAU,8DAEV,SAAY,2DAEZ,YAAe,oBAInB,CACEE,QAAS,qCACTD,QAAQ,EACR3B,OAAQ,CACN,SAAY,oBAIhB,CACE4B,QAAS,cACTD,QAAQ,EACR3B,OAAQ,CACN,SAAY,mCACZ,YAAe,SACf,YAAe,CACb4B,QAASxC,OAAO,QAAU0F,GAC1BpD,YAAY,EACZpI,MAAO,cAGV,sBAEH,OAAU,wFAEZnF,EAAMqC,UAAUyO,KAAO,CACrB,QAAW,CACTrD,QAAS,aACTtI,MAAO,aAET,QAAW,CACTsI,QAAS,kBACTF,YAAY,GAEd,gBAAiB,CAKjB,CAEEE,QAAS,kDACTF,YAAY,EACZpI,MAAO,YACN,CAEDsI,QAAS,8BACTtI,MAAO,aAGT,gBAAiB,CACfsI,QAAS,sCACTtI,MAAO,WACPoI,YAAY,GAId,cAAe,CACbE,QAAS,gCACT5B,OAAQ,CACN,YAAe,CACb4B,QAASxC,OAAO,uBAAyB0F,GACzCpD,YAAY,EACZpI,MAAO,aAGXA,MAAO,WACPoI,YAAY,GAEd,OAAU,CAEV,CACEE,QAAS,mDACTF,YAAY,EACZC,QAAQ,EACR3B,OAAQgF,GAIV,CACEpD,QAAS,2DACTF,YAAY,EACZC,QAAQ,EACR3B,OAAQ,CACN,KAAQ+E,IAIZ,CAEEnD,QAAS,0EACTF,YAAY,EACZC,QAAQ,EACR3B,OAAQgF,GACP,CAEDpD,QAAS,oBACTF,YAAY,EACZC,QAAQ,GACP,CAEDC,QAAS,2BACTD,QAAQ,EACR3B,OAAQ,CACN,OAAUgF,EAAaE,UAG3B,YAAe,CACbtD,QAASxC,OAAO,OAAS0F,GACzBxL,MAAO,YAET,SAAY0L,EAAaG,SACzB,SAAY,CACVvD,QAAS,2jDACTF,YAAY,GAEd,QAAW,CACTE,QAAS,gHACTF,YAAY,GAGd,QAAW,CACTE,QAAS,6SACTF,YAAY,EAEZpI,MAAO,cAET,QAAW,CACTsI,QAAS,iDACTF,YAAY,GAEd,kBAAmB,CACjBE,QAAS,UACTtI,MAAO,aAET,SAAY,CAEVsI,QAAS,8EACT5B,OAAQ,CACN,kBAAmB,CACjB4B,QAAS,MACTtI,MAAO,eAIb,YAAe,iCACf,OAAU,CACRsI,QAAS,qCACTF,YAAY,IAGhBqD,EAAoB/E,OAAS7L,EAAMqC,UAAUyO,KAK7C,IAFA,IAAIG,EAAa,CAAC,UAAW,gBAAiB,gBAAiB,cAAe,SAAU,cAAe,WAAY,UAAW,UAAW,UAAW,kBAAmB,WAAY,cAAe,UAC9LpF,EAASgF,EAAaG,SAAS,GAAGnF,OAC7B/K,EAAI,EAAGA,EAAImQ,EAAWjT,OAAQ8C,IACrC+K,EAAOoF,EAAWnQ,IAAMd,EAAMqC,UAAUyO,KAAKG,EAAWnQ,IAE1Dd,EAAMqC,UAAU6O,MAAQlR,EAAMqC,UAAUyO,KApM1C,CAqMG7Q,GAGHA,EAAMoC,UAAU8O,MAAQ,CACtB,QAAW,CAAC,CACV1D,QAAS,kCACTF,YAAY,EACZC,QAAQ,GACP,CACDC,QAAS,mBACTF,YAAY,EACZC,QAAQ,IAEV,OAAU,CACRC,QAAS,iDACTD,QAAQ,GAEV,aAAc,CACZC,QAAS,2FACTF,YAAY,EACZ1B,OAAQ,CACN,YAAe,UAGnB,QAAW,6GACX,QAAW,qBACX,SAAY,cACZ,OAAU,4DACV,SAAY,+CACZ,YAAe,iBAIjB5L,EAAMoC,UAAU+O,EAAInR,EAAMoC,UAAUqJ,OAAO,QAAS,CAClD,QAAW,CACT+B,QAAS,sEACTD,QAAQ,GAEV,OAAU,CAERC,QAAS,sCACTD,QAAQ,GAEV,aAAc,CACZC,QAAS,mFACTF,YAAY,GAEd,QAAW,oVACX,SAAY,wBACZ,OAAU,oHACV,SAAY,oDAEdtN,EAAMoC,UAAUuJ,aAAa,IAAK,SAAU,CAC1C,KAAQ,CAEN6B,QAAS,2CACTD,QAAQ,KAGZvN,EAAMoC,UAAUuJ,aAAa,IAAK,SAAU,CAC1C,MAAS,CAGP6B,QAAS,4FACTF,YAAY,EACZC,QAAQ,EACRrI,MAAO,WACP0G,OAAQ,CACN,OAAU,CAAC,CAET4B,QAAS,2BACTF,YAAY,GACXtN,EAAMoC,UAAU+O,EAAU,QAC7B,KAAQnR,EAAMoC,UAAU+O,EAAQ,KAChC,QAAWnR,EAAMoC,UAAU+O,EAAW,QACtC,aAAc,CAAC,CACb3D,QAAS,+BACTF,YAAY,GACX,CACDE,QAAS,+BACTF,YAAY,EACZpI,MAAO,aAGT,UAAa,CACXsI,QAAS,gBACTF,YAAY,EACZpI,MAAO,WAET,iBAAkB,KAClB,YAAe,kBACf,WAAc,CACZsI,QAAS,YACT5B,OAAQ5L,EAAMoC,UAAU+O,OAKhCnR,EAAMoC,UAAUuJ,aAAa,IAAK,WAAY,CAE5C,SAAY,sIAEP3L,EAAMoC,UAAU+O,EAAW,QAGlC,SAAWpR,GACT,IAAIqR,EAAU,osBACVC,EAAU,uCAAuCvQ,OAAOiH,QAAQ,cAAc,WAChF,OAAOqJ,EAAQtQ,UAEjBf,EAAMqC,UAAUkP,IAAMvR,EAAMqC,UAAUqJ,OAAO,IAAK,CAChD,aAAc,CAAC,CACb+B,QAASxC,OAAO,gEAAgElK,OAAOiH,QAAQ,cAAc,WAC3G,OAAOqJ,EAAQtQ,WAEjBwM,YAAY,GAMd,iCAGA,oCAGA,kEACA,QAAW8D,EACX,OAAU,CACR5D,QAAS,iJACTD,QAAQ,GAEV,SAAY,yHACZ,QAAW,uBAEbxN,EAAMqC,UAAUuJ,aAAa,MAAO,SAAU,CAC5C,OAAU,CAER6B,QAASxC,OAAO,2BAA2BlK,OAAS,MAEpD,mDAAmDA,OAAS,IAE5D,kDAAkDA,OAAOiH,QAAQ,eAAe,WAC9E,OAAOsJ,KACJ,KACL/D,YAAY,EACZC,QAAQ,EACR3B,OAAQ,CACN,OAAU,eACV,SAAY,IACZ,YAAe,OAGnB,aAAc,CACZ4B,QAAS,oCACTtI,MAAO,SACPqI,QAAQ,KAGZxN,EAAMqC,UAAUuJ,aAAa,MAAO,UAAW,CAC7C,mBAAoB,CAClB6B,QAAS,8DACT5B,OAAQ,CACN,SAAY,OACZ,QAAW,CACT4B,QAAS,WACTtI,MAAO,aACP0G,OAAQ7L,EAAMqC,UAAUkP,SAKhCvR,EAAMqC,UAAUuJ,aAAa,MAAO,WAAY,CAC9C,eAAgB,CACd6B,QAAS,KACTtI,MAAO,iBAGXnF,EAAMqC,UAAUuJ,aAAa,MAAO,aAAc,CAGhD,cAAe,CACb6B,QAAS,6EACTF,YAAY,EACZC,QAAQ,EACR3B,OAAQ7L,EAAMqC,UAAUqJ,OAAO,MAAO,OAG1C1L,EAAMqC,UAAUuJ,aAAa,SAAU,eAAgB,CAErD,aAAc,2BACb5L,EAAMqC,UAAUkP,IAAI,gBAvFzB,CAwFGtR,GAGH,SAAWD,GACT,IAAIwR,EAAS,8EACbxR,EAAMqC,UAAUoP,IAAM,CACpB,QAAW,mBACX,OAAU,CACRhE,QAAS,iDACT5B,OAAQ,CACN,KAAQ,WACR,6BAA8B,CAC5B4B,QAAS,4FACTF,YAAY,EACZpI,MAAO,YAET,QAAW,CACTsI,QAAS,yCACTF,YAAY,KAIlB,IAAO,CAELE,QAASxC,OAAO,eAAiBuG,EAAOzQ,OAAS,IAAM,8BAA8BA,OAAS,OAAQ,KACtGyM,QAAQ,EACR3B,OAAQ,CACN,SAAY,QACZ,YAAe,UACf,OAAU,CACR4B,QAASxC,OAAO,IAAMuG,EAAOzQ,OAAS,KACtCoE,MAAO,SAIb,SAAY,CACVsI,QAASxC,OAAO,qDAAuDuG,EAAOzQ,OAAS,iBACvFwM,YAAY,GAEd,OAAU,CACRE,QAAS+D,EACThE,QAAQ,GAEV,SAAY,CACVC,QAAS,oFACTF,YAAY,GAEd,UAAa,gBACb,SAAY,CACVE,QAAS,kCACTF,YAAY,GAEd,YAAe,aAEjBvN,EAAMqC,UAAUoP,IAAY,OAAE5F,OAAOa,KAAO1M,EAAMqC,UAAUoP,IAC5D,IAAI1B,EAAS/P,EAAMqC,UAAU0N,OACzBA,IACFA,EAAOL,IAAIgC,WAAW,QAAS,OAC/B3B,EAAOL,IAAIiC,aAAa,QAAS,QAvDrC,CAyDG1R,GAGH,SAAWD,GACT,IACI4R,EADAJ,EAAS,gDAEbxR,EAAMqC,UAAUoP,IAAII,SAAW,CAC7BpE,QAASzN,EAAMqC,UAAUoP,IAAII,SAASpE,QACtCF,YAAY,EACZ1B,OAAQ+F,EAAiB,CACvB,iBAAkB,+DAClB,eAAgB,UAChB,MAAS,WACT,GAAM,UACN,UAAa,CACXnE,QAASxC,OAAO,oBAAsBuG,EAAOzQ,OAAS,SACtDyM,QAAQ,EACR3B,OAAQ,CACN,YAAe,UACf,mBAAoB,CAClB4B,QAAS,aACTF,YAAY,EACZpI,MAAO,WAET,UAAa,CACXsI,QAAS,4CACTF,YAAY,EACZ1B,OAAQ,CACN,YAAe,QAGnB,YAAa,CACX4B,QAAS,oCACTF,YAAY,GAEd,aAAc,CAACiE,EAAQ,CACrB/D,QAAS,4CACTF,YAAY,IAEd,SAAY,cAGhB,OAAQ,CAAC,CACPE,QAAS,kDACTF,YAAY,EACZ1B,OAAQ,CACN,OAAU,SACV,SAAY,SAEb,CACD4B,QAAS,gCACTF,YAAY,IAEd,WAAc,cAId,YAAe,UAGnBvN,EAAMqC,UAAUoP,IAAY,OAAE5F,OAAO,8BAA8BA,OAAS+F,EAC5E5R,EAAMqC,UAAUuJ,aAAa,MAAO,WAAY,CAC9C,SAAY,CACV6B,QAAS,8EACTF,YAAY,KAGhB,IAAIuE,EAAO,CACTrE,QAAS,+BACTF,YAAY,GAGVwE,EAAS,CACXtE,QAAS,uCACTF,YAAY,GAEdvN,EAAMqC,UAAUuJ,aAAa,MAAO,WAAY,CAC9C,SAAY,CACV6B,QAAS,qBACTF,YAAY,GAId,QAAW,CACTE,QAAS,qBACTtI,MAAO,SAET,MAAS,CAAC,CACRsI,QAAS,o6CACTF,YAAY,GACX,CACDE,QAAS,4JACT5B,OAAQ,CACN,KAAQiG,EACR,OAAUC,EACV,SAAY,eACZ,YAAe,WAInB,OAAU,kBACV,KAAQD,EACR,OAAUC,IAnGd,CAqGG9R,GAGHA,EAAMoC,UAAU2P,WAAa/R,EAAMoC,UAAUqJ,OAAO,QAAS,CAC3D,aAAc,CAACzL,EAAMoC,UAAU8O,MAAM,cAAe,CAClD1D,QAAS,0GACTF,YAAY,IAEd,QAAW,CAAC,CACVE,QAAS,uBACTF,YAAY,GACX,CACDE,QAAS,mdACTF,YAAY,IAGd,SAAY,oGACZ,OAAU,CACRE,QAASxC,OAAO,aAAalK,OAAS,MAEtC,eAAeA,OAAS,IAExB,0BAA0BA,OAAS,IAEnC,4BAA4BA,OAAS,IAErC,sCAAsCA,OAAS,IAE/C,gBAAgBA,OAAS,IAEzB,oFAAoFA,OAAU,IAAM,YAAYA,QAChHwM,YAAY,GAEd,SAAY,8FAEdtN,EAAMoC,UAAU2P,WAAW,cAAc,GAAGvE,QAAU,uEACtDxN,EAAMoC,UAAUuJ,aAAa,aAAc,UAAW,CACpD,MAAS,CAEP6B,QAAS,yLACTF,YAAY,EACZC,QAAQ,EACR3B,OAAQ,CACN,eAAgB,CACd4B,QAAS,4BACTF,YAAY,EACZpI,MAAO,iBACP0G,OAAQ5L,EAAMoC,UAAU4P,OAE1B,kBAAmB,UACnB,cAAe,aAInB,oBAAqB,CACnBxE,QAAS,gMACTtI,MAAO,YAET,UAAa,CAAC,CACZsI,QAAS,sIACTF,YAAY,EACZ1B,OAAQ5L,EAAMoC,UAAU2P,YACvB,CACDvE,QAAS,qFACTF,YAAY,EACZ1B,OAAQ5L,EAAMoC,UAAU2P,YACvB,CACDvE,QAAS,kEACTF,YAAY,EACZ1B,OAAQ5L,EAAMoC,UAAU2P,YACvB,CACDvE,QAAS,8eACTF,YAAY,EACZ1B,OAAQ5L,EAAMoC,UAAU2P,aAE1B,SAAY,8BAEd/R,EAAMoC,UAAUuJ,aAAa,aAAc,SAAU,CACnD,SAAY,CACV6B,QAAS,QACTD,QAAQ,EACRrI,MAAO,WAET,kBAAmB,CACjBsI,QAAS,2EACTD,QAAQ,EACR3B,OAAQ,CACN,uBAAwB,CACtB4B,QAAS,QACTtI,MAAO,UAET,cAAiB,CACfsI,QAAS,mEACTF,YAAY,EACZ1B,OAAQ,CACN,4BAA6B,CAC3B4B,QAAS,YACTtI,MAAO,eAETuH,KAAMzM,EAAMoC,UAAU2P,aAG1B,OAAU,YAGd,kBAAmB,CACjBvE,QAAS,4EACTF,YAAY,EACZC,QAAQ,EACRrI,MAAO,cAGXlF,EAAMoC,UAAUuJ,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAClB6B,QAAS,oFACTF,YAAY,EACZpI,MAAO,cAGPlF,EAAMoC,UAAU0N,SAClB9P,EAAMoC,UAAU0N,OAAOL,IAAIgC,WAAW,SAAU,cAGhDzR,EAAMoC,UAAU0N,OAAOL,IAAIiC,aAAa,yNAAyN5Q,OAAQ,eAE3Qd,EAAMoC,UAAU6P,GAAKjS,EAAMoC,UAAU2P,WAGrC,SAAWhS,GAET,IAAImS,EAAU,YACVC,EAAgB,CAClB3E,QAAS,aACTtI,MAAO,YAETnF,EAAMqC,UAAUgQ,aAAerS,EAAMqC,UAAUqJ,OAAO,aAAc,CAClE,QAAWyG,EACX,OAAU,CAEV,CACE1E,QAAS,yBACTD,QAAQ,GACP,CAEDC,QAAS,yBACTD,QAAQ,EACR3B,OAAQ,CACN,cAAiBuG,KAGrB,QAAW,mSACX,eAAgB,CACd3E,QAAS,aACTtI,MAAO,cAGXnF,EAAMqC,UAAUuJ,aAAa,eAAgB,UAAW,CACtD,oBAAqB,CACnB6B,QAAS,iBACTtI,MAAO,WAGT,cAAe,CACbsI,QAAS,qBACTtI,MAAO,QACP0G,OAAQ,CACN,QAAWsG,EACX,cAAiBC,MAIvBpS,EAAMqC,UAAUuJ,aAAa,eAAgB,SAAU,CACrD,oBAAqB,CACnB6B,QAAS,yBACT5B,OAAQ,CACN,UAAa,CACX4B,QAAS,QACTtI,MAAO,eAET,OAAU,CACRsI,QAAS,UACTtI,MAAO,sBACP0G,OAAQ7L,EAAMqC,UAAU2P,cAK9B,mBAAoB,CAAC,CACnBvE,QAAS,iBACTD,QAAQ,EACRrI,MAAO,UACN,CACDsI,QAAS,iBACTD,QAAQ,EACRrI,MAAO,SACP0G,OAAQ,CACNuG,cAAeA,OAIrBpS,EAAMqC,UAAUuJ,aAAa,eAAgB,UAAW,CAEtD,SAAY,kCAEP5L,EAAMqC,UAAUgQ,aAAa,mBACpCrS,EAAMqC,UAAUiQ,OAAStS,EAAMqC,UAAUgQ,aA7E3C,CA8EGpS,GAGH,SAAWD,GAGT,IAAIuS,EAAgB,mBAEhB7C,EAAM,mFAEN8C,EAAa,MAAQ9C,EAAI3O,OAAS,YAAcwR,EAAcxR,OAAS,MAAQwR,EAAcxR,OAAS,YAAc2O,EAAI3O,OAAS,MAIjI0R,EAAW,kJAAkJ1R,OAAOiH,QAAQ,YAAY,WAC1L,MAAO,2EAA2EjH,UAEhFyQ,EAAS,8CAA8CzQ,OAQ3D,SAAS2R,EAAmBpS,EAAOoN,GACjCA,GAASA,GAAS,IAAI1F,QAAQ,KAAM,IAAM,IAE1C,IAAIyF,EAAU,yFAAyF1M,OAAOiH,QAAQ,aAAa,WACjI,OAAOwK,KACNxK,QAAQ,cAAc,WACvB,OAAO1H,KAET,OAAO2K,OAAOwC,EAASC,GAEzB1N,EAAMqC,UAAUsQ,KAAO,CACrB,OAAU,CACRlF,QAASxC,OAAO,6FAA6FlK,OAAOiH,QAAQ,aAAa,WACvI,OAAOwK,MAETjF,YAAY,EACZpI,MAAO,UAET,QAAW,MACX,IAAO,CACLsI,QAASxC,OAAO,kEAAkElK,OAAOiH,QAAQ,aAAa,WAC5G,OAAOwK,KACNxK,QAAQ,YAAY,WACrB,MAAO,MAAQyK,EAAW,IAAMjB,EAAS,QAE3CjE,YAAY,EACZC,QAAQ,EACRrI,MAAO,UAET,UAAa,CACXsI,QAAS,gBACTF,YAAY,EACZpI,MAAO,aAET,SAAY,CACVsI,QAASiF,EAAmB,sJAAsJ3R,QAClLwM,YAAY,EACZpI,MAAO,UAET,QAAW,CACTsI,QAASiF,EAAmB,aAAa3R,OAAQ,KACjDwM,YAAY,EACZpI,MAAO,aAET,KAAQ,CACNsI,QAASiF,EAAmB,SAAS3R,OAAQ,KAC7CwM,YAAY,EACZpI,MAAO,aAET,OAAU,CACRsI,QAASiF,EAAmBlB,GAC5BjE,YAAY,EACZC,QAAQ,GAEV,OAAU,CACRC,QAASiF,EAAmB,iFAAiF3R,OAAQ,KACrHwM,YAAY,GAEd,IAAOmC,EACP,UAAa6C,EACb,YAAe,6BAEjBvS,EAAMqC,UAAUuQ,IAAM5S,EAAMqC,UAAUsQ,KApFxC,CAqFG1S,GAGH,SAAWD,GAET,IAAI6S,EAAQ,2CAA2C9R,OAYvD,SAAS+R,EAAarF,GAIpB,OAHAA,EAAUA,EAAQzF,QAAQ,YAAY,WACpC,OAAO6K,KAEF5H,OAAO,0BAA0BlK,OAAS,MAAQ0M,EAAU,KAErE,IAAIsF,EAAY,4DAA4DhS,OACxEiS,EAAW,+CAA+CjS,OAAOiH,QAAQ,OAAO,WAClF,OAAO+K,KAELE,EAAY,sEAAsElS,OACtFf,EAAMqC,UAAU6Q,SAAWlT,EAAMqC,UAAUqJ,OAAO,SAAU,IAC5D1L,EAAMqC,UAAUuJ,aAAa,WAAY,SAAU,CACjD,qBAAsB,CACpB6B,QAAS,kDACTF,YAAY,EACZC,QAAQ,EACR3B,OAAQ,CACN,YAAe,YACf,eAAgB,CACd4B,QAAS,iBACTtI,MAAO,CAAC,OAAQ,iBAChB0G,OAAQ7L,EAAMqC,UAAUsQ,QAI9B,WAAc,CAEZlF,QAAS,kBACTtI,MAAO,eAET,MAAS,CACPsI,QAASxC,OAAO,IAAM+H,EAAWC,EAAY,MAAQD,EAAW,KAAM,KACtEnH,OAAQ,CACN,kBAAmB,CACjB4B,QAASxC,OAAO,KAAO+H,EAAWC,EAAY,OAASD,EAAW,OAClEzF,YAAY,EACZ1B,OAAQ,CACN,aAAc,CACZ4B,QAASxC,OAAO8H,GAChBlH,OAAQ7L,EAAMqC,UAAU6Q,UAE1B,YAAe,OAGnB,aAAc,CACZzF,QAASxC,OAAO,KAAO+H,EAAW,IAAMC,EAAY,KACpD1F,YAAY,EACZ1B,OAAQ,CACN,YAAe,iBAGnB,mBAAoB,CAClB4B,QAASxC,OAAO,IAAM+H,EAAW,KACjCnH,OAAQ,CACN,eAAgB,CACd4B,QAASxC,OAAO8H,GAChB5N,MAAO,YACP0G,OAAQ7L,EAAMqC,UAAU6Q,UAE1B,YAAe,SAKvB,KAAQ,CAAC,CAEPzF,QAAS,uFACTF,YAAY,EACZpI,MAAO,WACN,CAIDsI,QAAS,qBACTD,QAAQ,EACR3B,OAAQ,CACN,aAAc,CACZ4B,QAAS,qDACTF,YAAY,GAEd,gBAAiB,CACfE,QAAS,WACTF,YAAY,GAEd,YAAe,SAGnB,MAAS,CAAC,CAKRE,QAAS,0CACTtI,MAAO,YACP0G,OAAQ,CACNsH,YAAa,cAEd,CAGD1F,QAAS,aACTF,YAAY,EACZpI,MAAO,YACP0G,OAAQ,CACNsH,YAAa,aAGjB,GAAM,CAKJ1F,QAAS,wCACTF,YAAY,EACZpI,MAAO,eAET,KAAQ,CAKNsI,QAAS,mCACTF,YAAY,EACZpI,MAAO,eAET,gBAAiB,CAKfsI,QAAS,qHACT5B,OAAQ,CACN,SAAY,CACV4B,QAAS,gBACTF,YAAY,GAEd,OAAU,+DACV,YAAe,kBAEjBpI,MAAO,OAET,KAAQ,CAINsI,QAASqF,EAAa,kGAAkG/R,QACxHwM,YAAY,EACZC,QAAQ,EACR3B,OAAQ,CACN,QAAW,CACT4B,QAAS,sBACTF,YAAY,EACZ1B,OAAQ,IAEV,YAAe,YAGnB,OAAU,CAIR4B,QAASqF,EAAa,kGAAkG/R,QACxHwM,YAAY,EACZC,QAAQ,EACR3B,OAAQ,CACN,QAAW,CACT4B,QAAS,oBACTF,YAAY,EACZ1B,OAAQ,IAEV,YAAe,SAGnB,OAAU,CAIR4B,QAASqF,EAAa,2BAA2B/R,QACjDwM,YAAY,EACZC,QAAQ,EACR3B,OAAQ,CACN,QAAW,CACT4B,QAAS,uBACTF,YAAY,EACZ1B,OAAQ,IAEV,YAAe,QAGnB,eAAgB,CAGd4B,QAAS,mEACTF,YAAY,EACZC,QAAQ,EACRrI,MAAO,CAAC,OAAQ,YAElB,IAAO,CAILsI,QAASqF,EAAa,mGAAmG/R,QACzHwM,YAAY,EACZC,QAAQ,EACR3B,OAAQ,CACN,SAAY,KACZ,QAAW,CACT4B,QAAS,oBACTF,YAAY,EACZ1B,OAAQ,IAEV,SAAY,CACV4B,QAAS,6BACTF,YAAY,GAEd,IAAO,CACLE,QAAS,iBACTF,YAAY,GAEd,OAAU,CACRE,QAAS,oCACTF,YAAY,OAKpB,CAAC,MAAO,OAAQ,SAAU,UAAUhL,SAAQ,SAAUwB,GACpD,CAAC,MAAO,OAAQ,SAAU,SAAU,gBAAgBxB,SAAQ,SAAUsJ,GAChE9H,IAAU8H,IACZ7L,EAAMqC,UAAU6Q,SAASnP,GAAO8H,OAAOtK,QAAQsK,OAAOA,GAAU7L,EAAMqC,UAAU6Q,SAASrH,UAI/F7L,EAAMuE,MAAM7C,IAAI,kBAAkB,SAAU2C,GACrB,aAAjBA,EAAIvC,UAA4C,OAAjBuC,EAAIvC,UAGvC,SAASsR,EAAW9O,GAClB,GAAKA,GAA4B,iBAAXA,EAGtB,IAAK,IAAIxD,EAAI,EAAGuS,EAAI/O,EAAOtG,OAAQ8C,EAAIuS,EAAGvS,IAAK,CAC7C,IAAIiD,EAAQO,EAAOxD,GACnB,GAAmB,SAAfiD,EAAMvB,KAAV,CAkBA,IAAI8Q,EAAWvP,EAAMxC,QAAQ,GACzBgS,EAAYxP,EAAMxC,QAAQ,GAC9B,GAAI+R,GAAYC,GAA+B,kBAAlBD,EAAS9Q,MAA+C,eAAnB+Q,EAAU/Q,MAAqD,iBAArB8Q,EAAS/R,QAAsB,CAGzI,IAAIoI,EAAO2J,EAAS/R,QAAQyG,QAAQ,OAAQ,SAASA,QAAQ,UAAW,MAGpE7C,EAAQ,aADZwE,GAAQ,eAAerM,KAAKqM,IAAS,CAAC,KAAK,GAAGmB,eAGzCyI,EAAUpO,MAEuB,iBAApBoO,EAAUpO,MAC1BoO,EAAUpO,MAAQ,CAACoO,EAAUpO,MAAOA,GAEpCoO,EAAUpO,MAAM7D,KAAK6D,GAJrBoO,EAAUpO,MAAQ,CAACA,SA5BrBiO,EAAWrP,EAAMxC,UAqCvB6R,CAAW/O,EAAIC,WAEjBtE,EAAMuE,MAAM7C,IAAI,QAAQ,SAAU2C,GAChC,GAAiB,eAAbA,EAAI7B,KAAR,CAIA,IADA,IAAI8Q,EAAW,GACNxS,EAAI,EAAGuS,EAAIhP,EAAIsL,QAAQ3R,OAAQ8C,EAAIuS,EAAGvS,IAAK,CAClD,IAAI0S,EAAMnP,EAAIsL,QAAQ7O,GAClB+H,EAAQ,gBAAgBvL,KAAKkW,GACjC,GAAI3K,EAAO,CACTyK,EAAWzK,EAAM,GACjB,OAGJ,IAwCmBuH,EAxCfhM,EAAUpE,EAAMqC,UAAUiR,GAC9B,GAAKlP,EAYHC,EAAI9C,QAAUvB,EAAMwM,WA2BH4D,EA3ByB/L,EAAI9C,QA6BrC6O,EAAKpI,QAAQyL,EAAY,IAExBzL,QAAQ,iCAAiC,SAAU6C,EAAG1G,GAG9D,IAAI7D,EADN,GAAgB,OADhB6D,EAAOA,EAAK2G,eACH,GAOP,OAJExK,EADc,MAAZ6D,EAAK,GACCuP,SAASvP,EAAK4D,MAAM,GAAI,IAExB4L,OAAOxP,EAAK4D,MAAM,IAErB6L,EAActT,GAErB,IAAIuT,EAAQC,EAAmB3P,GAC/B,OAAI0P,GAIGhJ,MA/C+CzG,EAASkP,QAXjE,GAAIA,GAAyB,SAAbA,GAAuBtT,EAAMuM,QAAQwH,WAAY,CAC/D,IAAItJ,EAAK,OAAQ,IAAIuJ,MAAOtK,UAAY,IAAMhL,KAAKuV,MAAsB,KAAhBvV,KAAKwV,UAC9D7P,EAAIuL,WAAe,GAAInF,EACvBzK,EAAMuM,QAAQwH,WAAWI,cAAcb,GAAU,WAC/C,IAAIc,EAAM5L,SAAS6L,eAAe5J,GAC9B2J,IACFA,EAAIE,UAAYtU,EAAMwM,UAAU4H,EAAIG,YAAavU,EAAMqC,UAAUiR,GAAWA,YAQtF,IAAIG,EAAaxI,OAAOjL,EAAMqC,UAAU0N,OAAOL,IAAIjC,QAAQ1M,OAAQ,MAS/D+S,EAAqB,CACvB,IAAO,IACP,GAAM,IACN,GAAM,IACN,KAAQ,KAGNF,EAAgB7M,OAAO6M,eAAiB7M,OAAOyN,aAiCnDxU,EAAMqC,UAAUoS,GAAKzU,EAAMqC,UAAU6Q,SAxXvC,CAyXGjT,GAGHA,EAAMoC,UAAUqS,QAAU,CACxB,QAAW,MACX,YAAe,CACbjH,QAAS,mEACTD,QAAQ,EACRrI,MAAO,SACP0G,OAAQ,CACN,oBAAqB,CACnB4B,QAAS,kCACTF,YAAY,EACZ1B,OAAQ5L,EAAMoC,UAAU6Q,YAI9B,OAAU,CACRzF,QAAS,iDACTD,QAAQ,GAEV,OAAU,2CACV,QAAW,qBACX,SAAY,eACZ,UAAa,CACXC,QAAS,cACTtI,MAAO,YAET,YAAa,CACXsI,QAAS,iEACTD,QAAQ,GAEV,aAAc,CACZC,QAAS,oBACTtI,MAAO,cAET,OAAU,sCACV,SAAY,qBACZ,aAAc,CACZsI,QAAS,kFACTF,YAAY,GAEd,SAAY,CACVE,QAAS,+CACTF,YAAY,EACZpI,MAAO,YAET,sBAAuB,CACrBsI,QAAS,8BACTF,YAAY,EACZpI,MAAO,YAET,mBAAoB,CAClBsI,QAAS,2BACTF,YAAY,EACZpI,MAAO,YAET,QAAW,uIACX,SAAY,eACZ,iBAAkB,eAClB,OAAU,eACV,YAAe,iBACf,SAAY,OAEdlF,EAAMsE,MAAM7C,IAAI,kBAAkB,SAA8B2C,GAC9D,GAAqB,YAAjBA,EAAIvC,SAyFR,IA/EA,IAAI6S,EAActQ,EAAIC,OAAOsQ,QAAO,SAAU7Q,GAC5C,MAAwB,iBAAVA,GAAqC,YAAfA,EAAMvB,MAAqC,WAAfuB,EAAMvB,QAEpEqS,EAAe,EA4EZA,EAAeF,EAAY3W,QAAS,CACzC,IAAI8W,EAAaH,EAAYE,KAE7B,GAAwB,YAApBC,EAAWtS,MAA6C,aAAvBsS,EAAWvT,QAAwB,CAEtE,IAAIwT,EAAiB,GACrB,GAAIC,EAAY,CAAC,sBAAuB,iBAA2C,MAAxBC,EAAS,GAAG1T,QAAiB,CAEtFsT,GAAgB,EAEhB,IAAIK,EAAgBC,EAAmB,OAAQ,QAC/C,IAAuB,IAAnBD,EACF,SAGF,KAAOL,EAAeK,EAAeL,IAAgB,CACnD,IAAIO,EAAIH,EAAS,GACF,aAAXG,EAAE5S,OACJ6S,EAASD,EAAG,kBACZL,EAAezT,KAAK8T,EAAE7T,UAG1BsT,EAAeK,EAAgB,EAEjC,GAAIF,EAAY,CAAC,cAAe,oBAA8C,MAAxBC,EAAS,GAAG1T,UAChEsT,IAEAQ,EAASJ,EAAS,GAAI,qBAClBF,EAAe/W,OAAS,GAAG,CAC7B,IAAIsX,EAAcH,EAAmB,OAAQ,QAC7C,IAAqB,IAAjBG,EACF,SAGF,IAAK,IAAIxU,EAAI+T,EAAc/T,EAAIwU,EAAaxU,IAAK,CAC/C,IAAIyU,EAAWZ,EAAY7T,GACL,aAAlByU,EAAS/S,MAAuBuS,EAAejS,QAAQyS,EAAShU,UAAY,GAC9E8T,EAASE,EAAU,qBAzG/B,SAASN,EAASO,GAChB,OAAOb,EAAYE,EAAeW,GAUpC,SAASR,EAAYvV,EAAO+V,GAC1BA,EAASA,GAAU,EACnB,IAAK,IAAI1U,EAAI,EAAGA,EAAIrB,EAAMzB,OAAQ8C,IAAK,CACrC,IAAIiD,EAAQkR,EAASnU,EAAI0U,GACzB,IAAKzR,GAASA,EAAMvB,OAAS/C,EAAMqB,GACjC,OAAO,EAGX,OAAO,EAcT,SAASqU,EAAmBM,EAAMC,GAEhC,IADA,IAAIC,EAAc,EACT7U,EAAI+T,EAAc/T,EAAI6T,EAAY3W,OAAQ8C,IAAK,CACtD,IAAIiD,EAAQ4Q,EAAY7T,GACpBS,EAAUwC,EAAMxC,QACpB,GAAmB,gBAAfwC,EAAMvB,MAA6C,iBAAZjB,EACzC,GAAIkU,EAAKpM,KAAK9H,GACZoU,SACK,GAAID,EAAMrM,KAAK9H,IAEA,MADpBoU,EAEE,OAAO7U,EAKf,OAAQ,EAUV,SAASuU,EAAStR,EAAOoB,GACvB,IAAI0K,EAAU9L,EAAMoB,MACf0K,EAEO3F,MAAMC,QAAQ0F,KACxB9L,EAAMoB,MAAQ0K,EAAU,CAACA,IAFzB9L,EAAMoB,MAAQ0K,EAAU,GAI1BA,EAAQvO,KAAK6D,OAiDjBlF,EAAMoC,UAAUuT,IAAM,CACpB,QAAW,CACTnI,QAAS,gDACTF,YAAY,GAEd,SAAY,CAAC,CACXE,QAAS,sCACTD,QAAQ,GACP,YACH,OAAU,CACRC,QAAS,kDACTD,QAAQ,EACRD,YAAY,GAEd,WAAc,CACZE,QAAS,sCACTD,QAAQ,EACRD,YAAY,EACZ1B,OAAQ,CACN,YAAe,UAGnB,SAAY,4FAEZ,QAAW,u9EACX,QAAW,2BACX,OAAU,4CACV,SAAY,+HACZ,YAAe,eAIjB,SAAW7L,GACT,IAAI6V,EAAiB7V,EAAMqC,UAAU2P,WAAW,mBAE5C8D,EAAyBD,EAAepI,QAAQ1M,OAChDgV,EAAsBF,EAAehK,OAAsB,cAC3DmK,EAAiCD,EAAoBlK,OAAO,6BAC5DoK,EAAuBF,EAAoBtI,QAAQ1M,OAavD,SAASmV,EAAepU,EAAU4N,GAChC,GAAK1P,EAAMqC,UAAUP,GAGrB,MAAO,CACL2L,QAASxC,OAAO,OAASyE,EAAM,SAAWoG,GAC1CvI,YAAY,EACZC,QAAQ,EACR3B,OAAQ,CACN,uBAAwB,CACtB4B,QAAS,QACTtI,MAAO,UAET,gBAAiB,CACfsI,QAAS,UACTtI,MAAOrD,KAgCf,SAASqU,EAAeC,EAAStU,GAC/B,MAAO,MAAQA,EAASuU,cAAgB,IAAMD,EAAU,MAW1D,SAASE,EAAkBnS,EAAMC,EAAStC,GACxC,IAAIuC,EAAM,CACRF,KAAMA,EACNC,QAASA,EACTtC,SAAUA,GAKZ,OAHA9B,EAAMuE,MAAMC,IAAI,kBAAmBH,GACnCA,EAAIC,OAAStE,EAAMyE,SAASJ,EAAIF,KAAME,EAAID,SAC1CpE,EAAMuE,MAAMC,IAAI,iBAAkBH,GAC3BA,EAAIC,OASb,SAASiS,EAAgCC,GACvC,IAAIC,EAAc,GAClBA,EAAY,6BAA+BT,EAG3C,IAAI1R,EAAStE,EAAMyE,SAAS+R,EAAYC,GACxC,GAAsB,IAAlBnS,EAAOtG,OAAc,CASvB,IAAIkF,EAAO,CAAC,EAAG,GACfA,EAAK5B,KAAKJ,MAAMgC,EAAMoT,EAAkBhS,EAAO,GAAItE,EAAMqC,UAAU2P,WAAY,eAC/E1N,EAAOoS,OAAOxV,MAAMoD,EAAQpB,GAE9B,OAAO,IAAIlD,EAAMiK,MAAM,gBAAiB3F,EAAQyR,EAAoB5Q,MAAOqR,GAoB7E,SAASG,EAAiBxS,EAAMC,EAAStC,GAKvC,IAAI8U,EAAU5W,EAAMyE,SAASN,EAAM,CACjC,cAAiB,CACfsJ,QAASxC,OAAOgL,GAChB1I,YAAY,KAIZsJ,EAAqB,EAGrBC,EAAiB,GAejBC,EAAiBT,EAdFM,EAAQ9S,KAAI,SAAUC,GACvC,GAAqB,iBAAVA,EACT,OAAOA,EAIP,IAFA,IACIiT,EADAC,EAA0BlT,EAAMxC,SAEmD,IAAhF4C,EAAKrB,QAAQkU,EAAcb,EAAeU,IAAsB/U,MAIvE,OADAgV,EAAeE,GAAeC,EACvBD,KAERhT,KAAK,IAE6CI,EAAStC,GAE1DoV,EAAe7Y,OAAOsI,KAAKmQ,GAoD/B,OAnDAD,EAAqB,EAOrB,SAASzD,EAAW9O,GAClB,IAAK,IAAIxD,EAAI,EAAGA,EAAIwD,EAAOtG,OAAQ8C,IAAK,CACtC,GAAI+V,GAAsBK,EAAalZ,OACrC,OAEF,IAAI+F,EAAQO,EAAOxD,GACnB,GAAqB,iBAAViD,GAA+C,iBAAlBA,EAAMxC,QAAsB,CAClE,IAAIyV,EAAcE,EAAaL,GAC3BrH,EAAqB,iBAAVzL,EAAqBA,EACpCA,EAAMxC,QACF4M,EAAQqB,EAAE1M,QAAQkU,GACtB,IAAe,IAAX7I,EAAc,GACd0I,EACF,IAAI/K,EAAS0D,EAAE2H,UAAU,EAAGhJ,GACxBiJ,EAASb,EAAgCO,EAAeE,IACxDxI,EAAQgB,EAAE2H,UAAUhJ,EAAQ6I,EAAYhZ,QACxCqZ,EAAc,GAKlB,GAJIvL,GACFuL,EAAY/V,KAAKwK,GAEnBuL,EAAY/V,KAAK8V,GACb5I,EAAO,CACT,IAAI8I,EAAc,CAAC9I,GACnB4E,EAAWkE,GACXD,EAAY/V,KAAKJ,MAAMmW,EAAaC,GAEjB,iBAAVvT,GACTO,EAAOoS,OAAOxV,MAAMoD,EAAQ,CAACxD,EAAG,GAAGc,OAAOyV,IAC1CvW,GAAKuW,EAAYrZ,OAAS,GAE1B+F,EAAMxC,QAAU8V,OAGf,CACL,IAAI9V,EAAUwC,EAAMxC,QAChB2I,MAAMC,QAAQ5I,GAChB6R,EAAW7R,GAEX6R,EAAW,CAAC7R,MAKpB6R,CAAW2D,GACJ,IAAI/W,EAAMiK,MAAMnI,EAAUiV,EAAgB,YAAcjV,EAAUqC,GApL3EnE,EAAMqC,UAAU2P,WAAW,mBAAqB,CAKhDkE,EAAe,MAAO,0HAA0HnV,QAGhJmV,EAAe,OAAQ,yCAAyCnV,QAEhEmV,EAAe,MAAO,QAAQnV,QAE9BmV,EAAe,WAAY,oBAAoBnV,QAE/CmV,EAAe,UAAW,6CAA6CnV,QAEvEmV,EAAe,MAAO,QAAQnV,QAE9B8U,GAAgBjB,OAAO2C,SA0KvB,IAAIC,EAAqB,CACvB,YAAc,EACd,IAAM,EACN,YAAc,EACd,IAAM,EACN,KAAO,EACP,KAAO,GAoET,SAASC,EAAcnX,GACrB,MAAqB,iBAAVA,EACFA,EACE4J,MAAMC,QAAQ7J,GAChBA,EAAMwD,IAAI2T,GAAezT,KAAK,IAE9ByT,EAAcnX,EAAMiB,SAxE/BvB,EAAMuE,MAAM7C,IAAI,kBAAkB,SAAU2C,GACpCA,EAAIvC,YAAY0V,GAUtB,SAASE,EAAoBpT,GAC3B,IAAK,IAAIxD,EAAI,EAAGuS,EAAI/O,EAAOtG,OAAQ8C,EAAIuS,EAAGvS,IAAK,CAC7C,IAAIiD,EAAQO,EAAOxD,GACnB,GAAqB,iBAAViD,EAAX,CAGA,IAAIxC,EAAUwC,EAAMxC,QACpB,GAAK2I,MAAMC,QAAQ5I,GAMnB,GAAmB,oBAAfwC,EAAMvB,KAA4B,CAepC,IAAImV,EAAWpW,EAAQ,GACvB,GAAuB,IAAnBA,EAAQvD,QAAoC,iBAAb2Z,GAA2C,kBAAlBA,EAASnV,KAA0B,CAE7F,IAAI2B,EAAOsT,EAAcE,GACrBxS,EAAQwS,EAASxS,MACjBrD,EAAWoI,MAAMC,QAAQhF,GAASA,EAAM,GAAKA,EAC7Cf,EAAUpE,EAAMqC,UAAUP,GAC9B,IAAKsC,EAEH,SAEF7C,EAAQ,GAAKoV,EAAiBxS,EAAMC,EAAStC,SAG/C4V,EAAoBnW,OAlCG,iBAAZA,GACTmW,EAAoB,CAACnW,MAqC7BmW,CAAoBrT,EAAIC,WApS5B,CAsTGrE,GAGH,SAAWD,GACTA,EAAMqC,UAAUuV,WAAa5X,EAAMqC,UAAUqJ,OAAO,aAAc,CAChE,aAAc,CACZ+B,QAAS,+KACTF,YAAY,EACZC,QAAQ,EACR3B,OAAQ,MAEV,QAAW,0FAGb7L,EAAMqC,UAAUuV,WAAWvG,QAAQ/P,KAAK,qDAExC,2FAEA,qCAEOtB,EAAMqC,UAAUuV,WAAsB,iBACtC5X,EAAMqC,UAAUuV,WAAW,oBAElC,IAAIC,EAAa7X,EAAMqC,UAAUqJ,OAAO,aAAc,WAC/CmM,EAAW,cAClB7X,EAAMqC,UAAUuV,WAAW,cAAc/L,OAASgM,EAClD7X,EAAMqC,UAAUuJ,aAAa,aAAc,WAAY,CACrD,UAAa,CACX6B,QAAS,qBACT5B,OAAQ,CACN,GAAM,CACJ4B,QAAS,KACTtI,MAAO,YAET,SAAY,aAGhB,mBAAoB,CAElBsI,QAAS,yGACTD,QAAQ,EACR3B,OAAQ,CACN,SAAY,4DACZ,QAAW,CACT4B,QAAS,WAETtI,MAAO,aACP0G,OAAQgM,OAKhB7X,EAAMqC,UAAUyV,GAAK9X,EAAMqC,UAAUuV,WAjDvC,CAkDG3X,GAGH,SAAWD,GAmCT,SAAS+X,EAAOhX,EAAQ2M,GACtB,OAAOzC,OAAOlK,EAAOiH,QAAQ,SAAS,WACpC,MAAO,yDAAyDjH,UAC9D2M,GArCN1N,EAAMqC,UAAUuJ,aAAa,aAAc,oBAAqB,CAC9D,kBAAmB,CACjB6B,QAASxC,OAAO,YAAcjL,EAAMqC,UAAU2P,WAAW,qBAAqBvE,QAAQ1M,QACtFwM,YAAY,EACZpI,MAAO,CAAC,oBAAqB,SAAU,WAAY,sBAGvDnF,EAAMqC,UAAUuJ,aAAa,aAAc,WAAY,CACrD,OAAU,CACR6B,QAASxC,OAAO,YAAcjL,EAAMqC,UAAU2P,WAAqB,SAAEjR,QACrEwM,YAAY,EACZpI,MAAO,CAAC,WAAY,sBAGxBnF,EAAMqC,UAAUuJ,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAAC,CAGnB6B,QAAS,yOACTtI,MAAO,cACN,CAEDsI,QAAS,wBACTtI,MAAO,iBAgBXnF,EAAMqC,UAAUuJ,aAAa,aAAc,UAAW,CACpD,QAAW,CAET6B,QAASsK,EAAO,4GAA4GhX,QAC5HwM,YAAY,EACZ1B,OAAQ7L,EAAMqC,UAAU2P,YAE1B,QAAW,CAETvE,QAASsK,EAAO,mEAAmEhX,QACnFwM,YAAY,EACZ1B,OAAQ7L,EAAMqC,UAAU2P,cAG5BhS,EAAMqC,UAAU2P,WAAoB,QAAEgG,QAAQ,CAC5CvK,QAAS,wCACTtI,MAAO,UACN,CACDsI,QAAS,gGACTtI,MAAO,gBACN,CACDsI,QAAS,WACTtI,MAAO,CAAC,OAAQ,QACf,CACDsI,QAAS,gBACTtI,MAAO,QAETnF,EAAMqC,UAAUuJ,aAAa,aAAc,WAAY,CACrD,OAAU,CACR6B,QAAS,QACTtI,MAAO,YAET,MAAS,CACPsI,QAAS,KACTtI,MAAO,cAGXnF,EAAMqC,UAAUuJ,aAAa,aAAc,cAAe,CACxD,kBAAmB,CACjB6B,QAASsK,EAAO,gBAAgBhX,QAChCwM,YAAY,GAEd,mBAAoB,CAClBE,QAAS,8CACTF,YAAY,GAEd,IAAO,CAELE,QAAS,kFACTtI,MAAO,YAET,QAAW,CACTsI,QAAS,qBACTtI,MAAO,gBAKX,IADA,IAAI8S,EAAuB,CAAC,WAAY,oBAAqB,SAAU,kBAAmB,mBACjFnX,EAAI,EAAGA,EAAImX,EAAqBja,OAAQ8C,IAAK,CACpD,IAAIiD,EAAQkU,EAAqBnX,GAC7BR,EAAQN,EAAMqC,UAAU2P,WAAWjO,GAER,WAA3B/D,EAAM+J,KAAKvH,KAAKlC,KAClBA,EAAQN,EAAMqC,UAAU2P,WAAWjO,GAAS,CAC1C0J,QAASnN,IAIb,IAAIuL,EAASvL,EAAMuL,QAAU,GAC7BvL,EAAMuL,OAASA,EACfA,EAAO,oBAAsB,iBA9GjC,CAgHG5L,GAGH,SAAWD,GACT,IAAIgS,EAAahS,EAAM+J,KAAKO,MAAMtK,EAAMqC,UAAU2P,YAC9CkG,EAAQ,+CAA+CnX,OACvDoX,EAAS,+CAA+CpX,OACxDqX,EAAS,uCAAuCrX,OAMpD,SAASsX,EAAGtX,EAAQ2M,GAQlB,OAPA3M,EAASA,EAAOiH,QAAQ,QAAQ,WAC9B,OAAOkQ,KACNlQ,QAAQ,aAAa,WACtB,OAAOmQ,KACNnQ,QAAQ,aAAa,WACtB,OAAOoQ,KAEFnN,OAAOlK,EAAQ2M,GAExB0K,EAASC,EAAGD,GAAQrX,OACpBf,EAAMqC,UAAUiW,IAAMtY,EAAMqC,UAAUqJ,OAAO,SAAUsG,GACvDhS,EAAMqC,UAAUiW,IAAI5I,IAAIjC,QAAU4K,EAAG,wIAAwItX,QAC7Kf,EAAMqC,UAAUiW,IAAI5I,IAAI7D,OAAY,IAAE4B,QAAU,iBAChDzN,EAAMqC,UAAUiW,IAAI5I,IAAI7D,OAAO,cAAc4B,QAAU,qEACvDzN,EAAMqC,UAAUiW,IAAI5I,IAAI7D,OAAY,IAAEA,OAAO,cAAgB,4BAC7D7L,EAAMqC,UAAUiW,IAAI5I,IAAI7D,OAAgB,QAAImG,EAAoB,QAChEhS,EAAMqC,UAAUuJ,aAAa,SAAU,YAAa,CAClD,OAAU,CACR6B,QAAS4K,EAAG,WAAWtX,QACvB8K,OAAQ7L,EAAMqC,UAAUiW,MAEzBtY,EAAMqC,UAAUiW,IAAI5I,KACvB1P,EAAMqC,UAAUuJ,aAAa,SAAU,eAAgB,CACrD,OAAU,CAER6B,QAAS4K,EAAG,YAAYtX,QACxBoE,MAAO,sBACP0G,OAAQ,CACN,qBAAsB,CACpB4B,QAAS,WACTtI,MAAO,eAETuH,KAAM1M,EAAMqC,UAAUiW,OAGzBtY,EAAMqC,UAAUiW,IAAI5I,KAEvB,IAAI6I,EAAiB,SAAUxU,GAC7B,OAAKA,EAGgB,iBAAVA,EACFA,EAEoB,iBAAlBA,EAAMxC,QACRwC,EAAMxC,QAERwC,EAAMxC,QAAQuC,IAAIyU,GAAgBvU,KAAK,IARrC,IAUPoP,EAAa,SAAU9O,GAEzB,IADA,IAAIkU,EAAa,GACR1X,EAAI,EAAGA,EAAIwD,EAAOtG,OAAQ8C,IAAK,CACtC,IAAIiD,EAAQO,EAAOxD,GACf2X,GAAiB,EA6BrB,GA5BqB,iBAAV1U,IACU,QAAfA,EAAMvB,MAAkBuB,EAAMxC,QAAQ,IAAgC,QAA1BwC,EAAMxC,QAAQ,GAAGiB,KAEnB,OAAxCuB,EAAMxC,QAAQ,GAAGA,QAAQ,GAAGA,QAE1BiX,EAAWxa,OAAS,GAAKwa,EAAWA,EAAWxa,OAAS,GAAGgS,UAAYuI,EAAexU,EAAMxC,QAAQ,GAAGA,QAAQ,KAEjHiX,EAAWhT,MAG2C,OAApDzB,EAAMxC,QAAQwC,EAAMxC,QAAQvD,OAAS,GAAGuD,SAE1CiX,EAAWlX,KAAK,CACd0O,QAASuI,EAAexU,EAAMxC,QAAQ,GAAGA,QAAQ,IACjDmX,aAAc,IAIXF,EAAWxa,OAAS,GAAoB,gBAAf+F,EAAMvB,MAA4C,MAAlBuB,EAAMxC,QAExEiX,EAAWA,EAAWxa,OAAS,GAAG0a,eACzBF,EAAWxa,OAAS,GAAKwa,EAAWA,EAAWxa,OAAS,GAAG0a,aAAe,GAAoB,gBAAf3U,EAAMvB,MAA4C,MAAlBuB,EAAMxC,QAE9HiX,EAAWA,EAAWxa,OAAS,GAAG0a,eAElCD,GAAiB,IAGjBA,GAAmC,iBAAV1U,IACvByU,EAAWxa,OAAS,GAAwD,IAAnDwa,EAAWA,EAAWxa,OAAS,GAAG0a,aAAoB,CAGjF,IAAIC,EAAYJ,EAAexU,GAE3BjD,EAAIwD,EAAOtG,OAAS,IAA+B,iBAAlBsG,EAAOxD,EAAI,IAA0C,eAAvBwD,EAAOxD,EAAI,GAAG0B,QAC/EmW,GAAaJ,EAAejU,EAAOxD,EAAI,IACvCwD,EAAOoS,OAAO5V,EAAI,EAAG,IAEnBA,EAAI,IAA+B,iBAAlBwD,EAAOxD,EAAI,IAA0C,eAAvBwD,EAAOxD,EAAI,GAAG0B,QAC/DmW,EAAYJ,EAAejU,EAAOxD,EAAI,IAAM6X,EAC5CrU,EAAOoS,OAAO5V,EAAI,EAAG,GACrBA,KAEFwD,EAAOxD,GAAK,IAAId,EAAMiK,MAAM,aAAc0O,EAAW,KAAMA,GAG3D5U,EAAMxC,SAAoC,iBAAlBwC,EAAMxC,SAChC6R,EAAWrP,EAAMxC,WAIvBvB,EAAMuE,MAAM7C,IAAI,kBAAkB,SAAU2C,GACrB,QAAjBA,EAAIvC,UAAuC,QAAjBuC,EAAIvC,UAGlCsR,EAAW/O,EAAIC,WAxHnB,CA0HGrE,GAGH,SAAWD,GACTA,EAAMqC,UAAUuW,KAAO,CACrB,MAAS,CAET,4BAEA,YAEA,YAQF,IAAIC,EAAW,CACb,eAAgB,IAChB,gBAAiB,IACjB,gBAAiB,IACjB,iBAAkB,IAClB,UAAa,IACb,KAAQ,KAGVxa,OAAOsI,KAAKkS,GAAUtW,SAAQ,SAAU2D,GACtC,IAAI4S,EAASD,EAAS3S,GAClBf,EAAQ,GACP,QAAQkE,KAAKnD,IAEhBf,EAAM7D,KAAK,MAAMhE,KAAK4I,GAAM,IAEjB,SAATA,GACFf,EAAM7D,KAAK,QAEbtB,EAAMqC,UAAUuW,KAAK1S,GAAQ,CAC3BuH,QAASxC,OAAO,QAAU6N,EAAS,iCAAkC,KACrE3T,MAAOA,EACP0G,OAAQ,CACN,KAAQ,CACN4B,QAAS,+BACTF,YAAY,GAEd,OAAU,CACRE,QAAS,SACTtI,MAAO,MAAM7H,KAAK4I,GAAM,SAMhC7H,OAAOkC,eAAeP,EAAMqC,UAAUuW,KAAM,WAAY,CACtDtY,MAAOuY,IApDX,CAsDG5Y,GAGHA,EAAMoC,UAAU0W,IAAM,CAUpB,QAAW,QAIX,QAAW,WACX,SAAY,SAIZ,OAAU,kCAMV,QAAW,CACTtL,QAAS,iBACT5B,OAAQ,CAON,UAAa,aAgBjB,MAAS,YAWT,cAAe,oBAIjB5L,EAAMoC,UAAU2W,GAAK/Y,EAAMoC,UAAUqJ,OAAO,QAAS,CACnD,OAAU,CACR+B,QAAS,yCACTF,YAAY,EACZC,QAAQ,GAEV,QAAW,sKACX,QAAW,gCACX,OAAU,CAEV,+BAEA,gFAEA,sEACA,SAAY,wFACZ,QAAW,6LAEbvN,EAAMoC,UAAUuJ,aAAa,KAAM,SAAU,CAC3C,KAAQ,CACN6B,QAAS,6BACTD,QAAQ,YAGLvN,EAAMoC,UAAU2W,GAAG,cAG1B,SAAWhZ,GAQT,SAASmW,EAAerU,EAAUqM,GAChC,MAAO,MAAQrM,EAASuU,cAAgBlI,EAAQ,MAElD9P,OAAO4a,iBAAiBjZ,EAAMqC,UAAU,qBAAuB,GAAI,CACjE6W,kBAAmB,CAYjB5Y,MAAO,SAAU+D,EAAKvC,EAAUqX,EAAoBC,GAClD,GAAI/U,EAAIvC,WAAaA,EAArB,CAGA,IAAIuX,EAAahV,EAAIgV,WAAa,GAClChV,EAAIF,KAAOE,EAAIF,KAAK6D,QAAQmR,GAAoB,SAAUtQ,GACxD,GAA6B,mBAAlBuQ,IAAiCA,EAAcvQ,GACxD,OAAOA,EAKT,IAHA,IACImO,EADAlW,EAAIuY,EAAWrb,QAGqD,IAAjEqG,EAAIF,KAAKrB,QAAQkU,EAAcb,EAAerU,EAAUhB,OAC3DA,EAIJ,OADAuY,EAAWvY,GAAK+H,EACTmO,KAGT3S,EAAID,QAAUpE,EAAMqC,UAAU0N,UAGlCuJ,qBAAsB,CAOpBhZ,MAAO,SAAU+D,EAAKvC,GACpB,GAAIuC,EAAIvC,WAAaA,GAAauC,EAAIgV,WAAtC,CAIAhV,EAAID,QAAUpE,EAAMqC,UAAUP,GAC9B,IAAIsL,EAAI,EACJzG,EAAOtI,OAAOsI,KAAKtC,EAAIgV,aAC3B,SAASjG,EAAW9O,GAClB,IAAK,IAAIxD,EAAI,EAAGA,EAAIwD,EAAOtG,UAErBoP,GAAKzG,EAAK3I,QAFmB8C,IAAK,CAKtC,IAAIiD,EAAQO,EAAOxD,GACnB,GAAqB,iBAAViD,GAAsBA,EAAMxC,SAAoC,iBAAlBwC,EAAMxC,QAAsB,CACnF,IAAIsB,EAAI8D,EAAKyG,GACTgI,EAAI/Q,EAAIgV,WAAWxW,GACnB2M,EAAqB,iBAAVzL,EAAqBA,EAAQA,EAAMxC,QAC9CyV,EAAcb,EAAerU,EAAUe,GACvCsL,EAAQqB,EAAE1M,QAAQkU,GACtB,GAAI7I,GAAS,EAAG,GACZf,EACF,IAAItB,EAAS0D,EAAE2H,UAAU,EAAGhJ,GACxBiJ,EAAS,IAAIpX,EAAMiK,MAAMnI,EAAU9B,EAAMyE,SAAS2Q,EAAG/Q,EAAID,SAAU,YAActC,EAAUsT,GAC3F5G,EAAQgB,EAAE2H,UAAUhJ,EAAQ6I,EAAYhZ,QACxCqZ,EAAc,GACdvL,GACFuL,EAAY/V,KAAKJ,MAAMmW,EAAajE,EAAW,CAACtH,KAElDuL,EAAY/V,KAAK8V,GACb5I,GACF6I,EAAY/V,KAAKJ,MAAMmW,EAAajE,EAAW,CAAC5E,KAE7B,iBAAVzK,EACTO,EAAOoS,OAAOxV,MAAMoD,EAAQ,CAACxD,EAAG,GAAGc,OAAOyV,IAE1CtT,EAAMxC,QAAU8V,QAGXtT,EAAMxC,SAEf6R,EAAWrP,EAAMxC,SAGrB,OAAO+C,EAET8O,CAAW/O,EAAIC,aArGvB,CAyGGrE,GAGH,SAAWD,GACTA,EAAMqC,UAAUkX,WAAa,CAC3B,QAAW,oBACX,UAAa,CACX9L,QAAS,oBACTtI,MAAO,eAET,OAAU,mCACV,OAAU,iEACV,QAAW,qBACX,MAAS,CACPsI,QAAS,+CACTF,YAAY,EACZpI,MAAO,WAET,SAAY,CACVsI,QAAS,aACT5B,OAAQ,CACNsH,YAAa,QACbnC,SAAU,YAGd,YAAe,qCACf,SAAY,wCAEdhR,EAAMuE,MAAM7C,IAAI,mBAAmB,SAAU2C,GAE3CrE,EAAMqC,UAAU,qBAAqB6W,kBAAkB7U,EAAK,aADpC,6CAG1BrE,EAAMuE,MAAM7C,IAAI,kBAAkB,SAAU2C,GAC1CrE,EAAMqC,UAAU,qBAAqBiX,qBAAqBjV,EAAK,iBAEjErE,EAAMqC,UAAUmX,IAAMxZ,EAAMqC,UAAUkX,WAhCxC,CAiCGtZ,GAIHA,EAAMoC,UAAUoX,KAAO,CACrB,SAAY,CACVhM,QAAS,yCACTF,YAAY,EACZC,QAAQ,GAEV,OAAU,CACRC,QAAS,yCACTF,YAAY,EACZC,QAAQ,GAEV,QAAW,CACTC,QAAS,gCACTD,QAAQ,GAEV,OAAU,qCACV,YAAe,WACf,SAAY,IACZ,QAAW,qBACX,KAAQ,CACNC,QAAS,WACTtI,MAAO,YAGXlF,EAAMoC,UAAUqX,YAAczZ,EAAMoC,UAAUoX,KAW9CxZ,EAAMoC,UAAUsX,KAAO1Z,EAAMoC,UAAUqJ,OAAO,MAAO,CACnD,QAAW,CAAC,mBAAoB,CAC9B+B,QAAS,kBACTF,YAAY,IAEd,OAAU,CACRE,QAAS,0EACT5B,OAAQ,CACN,YAAe,UAInB,SAAY,CACV4B,QAAS,0GACT5B,OAAQ,CAEN,SAAY,aAGhB,SAAY,0CACZ,SAAY,aAEd5L,EAAMoC,UAAUuJ,aAAa,OAAQ,WAAY,CAC/C,SAAY,CAEZ,CACE6B,QAAS,cACT5B,OAAQ,CACN,YAAe,MAInB,aACA,cAAe,CACb4B,QAAS,sCACTF,YAAY,EACZpI,MAAO,cAKXlF,EAAMoC,UAAUuX,SAAW,CACzB,QAAW,CACTnM,QAAS,6CACTF,YAAY,GAEd,OAAU,CACRE,QAAS,iDACTD,QAAQ,GAEV,iBAAkB,CAChBC,QAAS,gCACTtI,MAAO,WAET,OAAU,CACRsI,QAAS,8CACTtI,MAAO,SACP0G,OAAQ,CACN,SAAY,wCAGhB,SAAY,wDAEZ,QAAW,6HACX,SAAY,CACV4B,QAAS,wQACTF,YAAY,GAEd,SAAY,uBACZ,YAAe,YAIjBtN,EAAMoC,UAAUwX,WAAa5Z,EAAMoC,UAAUqJ,OAAO,IAAK,CACvD,OAAU,CACR+B,QAAS,wCACTD,QAAQ,GAEV,QAAW,wYACX,SAAY,iEAEPvN,EAAMoC,UAAUwX,WAAW,cAClC5Z,EAAMoC,UAAUyX,KAAO7Z,EAAMoC,UAAUwX,WAIvC5Z,EAAMoC,UAAU0X,MAAQ,CACtB,QAAW,CACTtM,QAAS,mBACTD,QAAQ,GAEV,KAAQ,CACNC,QAAS,+CACTD,QAAQ,GAEV,OAAU,CAAC,CACTC,QAAS,sCACTD,QAAQ,GACP,CACDC,QAAS,8BACTD,QAAQ,IAEV,OAAU,CAEV,uCAEA,oEAEA,qDACA,UAAa,CACXC,QAAS,SACTtI,MAAO,YAET,MAAS,CACPsI,QAAS,SACTtI,MAAO,YAET,gBAAiB,CACfsI,QAAS,SACTtI,MAAO,YAET,QAAW,CACTsI,QAAS,OACTtI,MAAO,UAIT,QAAW,gSACX,QAAW,qBACX,4BAA6B,CAC3BsI,QAAS,yBACTtI,MAAO,eAGT,SAAY,wGACZ,YAAe,+BAIjBlF,EAAMoC,UAAU2X,OAAS,CACvB,QAAW,CACTvM,QAAS,eACTF,YAAY,EACZC,QAAQ,GAEV,uBAAwB,CACtBC,QAAS,sEACTD,QAAQ,EACR3B,OAAQ,CACN,cAAiB,CAEf4B,QAAS,sFACTF,YAAY,EACZ1B,OAAQ,CACN,cAAe,CACb4B,QAAS,sBACTF,YAAY,GAEd,oBAAqB,CACnBE,QAAS,kBACTtI,MAAO,eAETuH,KAAM,OAGV,OAAU,YAGd,uBAAwB,CACtBe,QAAS,uCACTD,QAAQ,EACRrI,MAAO,UAET,OAAU,CACRsI,QAAS,mDACTD,QAAQ,GAEV,SAAY,CACVC,QAAS,4CACTF,YAAY,GAEd,aAAc,CACZE,QAAS,mBACTF,YAAY,GAEd,UAAa,CACXE,QAAS,2BACTF,YAAY,EACZpI,MAAO,CAAC,aAAc,eACtB0G,OAAQ,CACN,YAAe,OAGnB,QAAW,wNACX,QAAW,shBACX,QAAW,0BACX,OAAU,mJACV,SAAY,uDACZ,YAAe,iBAEjB5L,EAAMoC,UAAU2X,OAAO,wBAAwBnO,OAAsB,cAAEA,OAAOa,KAAOzM,EAAMoC,UAAU2X,OACrG/Z,EAAMoC,UAAU4X,GAAKha,EAAMoC,UAAU2X,OAGrC/Z,EAAMoC,UAAU6X,OAASja,EAAMoC,UAAUqJ,OAAO,QAAS,CACvD,OAAU,CACR+B,QAAS,sCACTD,QAAQ,GAGV,aAAc,aACd,QAAW,4RACX,SAAY,wGAEdvN,EAAMoC,UAAUuJ,aAAa,SAAU,aAAc,CACnD,KAAQ,CACN6B,QAAS,gEACTD,QAAQ,GAGV,YAAe,wBACf,MAAS,CACPC,QAAS,mBACTtI,MAAO,mBAIJlF,EAAMoC,UAAU6X,OAAOC,SAG9B,SAAWna,GACTA,EAAMqC,UAAU+X,KAAOpa,EAAMqC,UAAUqJ,OAAO,MAAO,CAEnD,QAAW,CACT+B,QAAS,gDACTF,YAAY,EACZC,QAAQ,KAGZxN,EAAMqC,UAAUuJ,aAAa,OAAQ,SAAU,CAE7C,cAAe,CAEb6B,QAAS,sBACTD,QAAQ,EACR3B,OAAQ,CACN,OAAU,8BAIT7L,EAAMqC,UAAU+X,KAAKC,OAC5B,IAAIrJ,EAAW,yBACXsJ,EAAW,CAAC,2CAA4C,CAC1D7M,QAAS,cACTF,YAAY,IAEdvN,EAAMqC,UAAUuJ,aAAa,OAAQ,WAAY,CAE/C,gBAAiB,CACf6B,QAAS,eACTD,QAAQ,EACR3B,OAAQ,CACN,YAAe,IACf,SAAYmF,EACZ,SAAYsJ,IAIhB,gBAAiB,CACf7M,QAAS,qCACTD,QAAQ,EACR3B,OAAQ,CACN,SAAY,CAAC,kBAAmB,CAC9B4B,QAAS,aACTF,YAAY,IAEd,YAAe,IACf,SAAYyD,EACZ,SAAYsJ,EACZ,UAAata,EAAMqC,UAAU+X,KAAKG,qBAIjCva,EAAMqC,UAAU+X,KAAK/N,gBACrBrM,EAAMqC,UAAU+X,KAAKG,UAG5Bva,EAAMqC,UAAUuJ,aAAa,OAAQ,cAAe,CAClD,SAAY,CACV6B,QAAS,yHACTF,YAAY,EACZC,QAAQ,KA7Dd,CAgEGvN,GAGHA,EAAMoC,UAAUmY,KAAOva,EAAMoC,UAAUqJ,OAAO,MAAO,CACnD,QAAW,CACT+B,QAAS,uCACTF,YAAY,GAEd,OAAU,CACRE,QAAS,sDACT5B,OAAQ,CACN,KAAQ,YAIZ,IAAO,0BAQP,SAAY,CAEV4B,QAAS,iGACT5B,OAAQ,CACN,OAAU,CACR4B,QAAS,IACTtI,MAAO,aAET,YAAe,UACf,SAAY,2BAGhB,SAAY,CACVsI,QAAS,2CACT5B,OAAQ,CACN,SAAY,6BAIlB5L,EAAMoC,UAAUuJ,aAAa,OAAQ,SAAU,CAC7C,QAAW,CAAC,oHAAqH,CAC/H6B,QAAS,2BACTF,YAAY,MAGhBtN,EAAMoC,UAAUuJ,aAAa,OAAQ,YAAa,CAEhD,SAAY,2BAEd3L,EAAMoC,UAAUuJ,aAAa,OAAQ,WAAY,CAC/C,kBAAmB,CACjB6B,QAAS,6BACTtI,MAAO,WAET,YAAe,CACbsI,QAAS,UACTtI,MAAO,YAET,UAAa,CACXsI,QAAS,6BACTtI,MAAO,WAET,QAAW,qBACX,KAAQ,CACNsI,QAAS,WACTtI,MAAO,WAET,SAAY,CACVsI,QAAS,kDACTF,YAAY,KAGhBtN,EAAMoC,UAAUmY,KAAa,OAAE3O,OAAOa,KAAOzM,EAAMoC,UAAUmY,KAG7D,SAAWxa,GACT,IAAI8R,EAAO,CACTrE,QAAS,sBACTF,YAAY,GAGVwE,EAAS,CACXtE,QAAS,uCACTF,YAAY,GAEV1B,EAAS,CACX,QAAW,CACT4B,QAAS,uCACTF,YAAY,GAEd,IAAO,CACLE,QAAS,yBACTD,QAAQ,GAEV,OAAU,CACRC,QAAS,gDACTD,QAAQ,GAEV,cAAiB,KAEjB,KAAQ,KAER,UAAa,+BACb,QAAW,CACTC,QAAS,2DACTF,YAAY,GAEd,QAAW,iBACX,MAAS,CAAC,q5CAAs5C,CAC95CE,QAAS,4JACT5B,OAAQ,CACN,KAAQiG,EACR,OAAUC,EACV,SAAY,eACZ,YAAe,WAGnB,OAAU,kBACV,KAAQD,EACR,QAAW,qBACX,SAAY,CAGZ,wGACA,OAAUC,EACV,YAAe,iBAEjBlG,EAAsB,cAAI,CACxB4B,QAAS,iBACTtI,MAAO,WACP0G,OAAQ,CACN,UAAa,CACX4B,QAAS,UACTtI,MAAO,eAETuH,KAAMb,IAGVA,EAAa,KAAI,CACf4B,QAAS,oBACT5B,OAAQ,CACN,SAAY,SACZa,KAAMb,IAGV7L,EAAMqC,UAAUoY,OAAS,CACvB,qBAAsB,CACpBhN,QAAS,gBACTF,YAAY,EACZ1B,OAAQ,CACN,OAAU,WACVa,KAAMb,IAGV,uBAAwB,CACtB4B,QAAS,qDACTF,YAAY,EACZ1B,OAAQ,CACN,SAAY,OACZa,KAAMb,IAGV,UAAa,CACX4B,QAAS,iDACTF,YAAY,EACZ1B,OAAQ,CACN,QAAW,OACXa,KAAMb,IAKV,uBAAwB,CACtB4B,QAAS,6HACTF,YAAY,EACZ1B,OAAQ,CACN,SAAY,CACV4B,QAAS,WACT5B,OAAQ,CACN,cAAiBA,EAAOuG,gBAG5B1F,KAAMb,IAMV,SAAY,CACV4B,QAAS,wOACTF,YAAY,EACZ1B,OAAQ,CACN,cAAiBA,EAAOuG,cACxB,QAAWvG,EAAOsG,QAClB,YAAe,UAGnB,KAAQtG,EAAOzM,KACf,OAAUyM,EAAO2F,OACjB,QAAW,CACT/D,QAAS,uCACTF,YAAY,EACZC,QAAQ,GAEV,cAAiB3B,EAAOuG,cACxB,YAAe,iBAlInB,CAoIGnS,GAGH,SAAWD,GACT,IAAI4X,EAAa5X,EAAM+J,KAAKO,MAAMtK,EAAMqC,UAAUuV,YAClD5X,EAAMqC,UAAUqY,IAAM1a,EAAMqC,UAAUqJ,OAAO,MAAOkM,UAE7C5X,EAAMqC,UAAUqY,IAAe,iBAC/B1a,EAAMqC,UAAUqY,IAAI,oBAI3B,IAAIhL,EAAM1P,EAAMqC,UAAUqY,IAAIhL,IAC9BA,EAAIjC,QAAUxC,OAAO,qBAAqBlK,OAAS,MAAQ2O,EAAIjC,QAAQ1M,OAAS,IAAK2O,EAAIjC,QAAQC,OACjGgC,EAAInC,YAAa,EAXnB,CAYGtN,GAGHA,EAAMoC,UAAUsY,KAAO,CACrB,QAAW,CAAC,iBAAkB,CAC5BlN,QAAS,OACTD,QAAQ,IAEV,OAAU,CACRC,QAAS,yBACTD,QAAQ,GAEV,QAAW,CAAC,CACVC,QAAS,sBACT5B,OAAQ,CACN,SAAY,MAEb,CACD4B,QAAS,ibACT5B,OAAQ,CACN,YAAe,OAEhB,4QACH,SAAY,kCACZ,OAAU,kNACV,YAAe,QAEF,O,kCC/2Hf,IAAIrO,EAAS,EAAQ,QACjB0J,EAAc,EAAQ,QACtB0T,EAAwB,EAAQ,QAChCC,EAAc,EAAQ,QACtBhU,EAAQ,EAAQ,QAGhBoE,EAASzN,EAAOyN,OAChB6P,EAAkB7P,EAAOzM,UAEhB0I,GAAeL,GAAM,WAChC,IAAIkU,GAAkB,EACtB,IACE9P,EAAO,IAAK,KACZ,MAAO1N,GACPwd,GAAkB,EAGpB,IAAIC,EAAI,GAEJC,EAAQ,GACRC,EAAWH,EAAkB,SAAW,QAExCI,EAAY,SAAU9a,EAAK+a,GAE7B/c,OAAOkC,eAAeya,EAAG3a,EAAK,CAAE+F,IAAK,WAEnC,OADA6U,GAASG,GACF,MAIPC,EAAQ,CACVC,OAAQ,IACR9d,OAAQ,IACR+d,WAAY,IACZC,UAAW,IACXC,OAAQ,KAKV,IAAK,IAAIpb,KAFL0a,IAAiBM,EAAMK,WAAa,KAExBL,EAAOF,EAAU9a,EAAKgb,EAAMhb,IAK5C,OAFahC,OAAOsd,yBAAyBb,EAAiB,SAAS1U,IAAInF,KAAK+Z,KAE9DE,GAAYD,IAAUC,MAK9BN,EAAsBE,EAAiB,QAAS,CAC1Dra,cAAc,EACd2F,IAAKyU,K,kCCrDP,IAAIe,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,SAEnB5e,EAAOC,QAAU,SAAUmD,EAAKC,GAC/B,OAAOub,EAAMxb,KAASwb,EAAMxb,QAAiBzC,IAAV0C,EAAsBA,EAAQ,MAChE,WAAY,IAAIgB,KAAK,CACtBwH,QAAS,SACTgT,KAAMF,EAAU,OAAS,SACzBG,UAAW,4CACXC,QAAS,2DACTjb,OAAQ,yC,kCCVV,IAAItD,EAAa,EAAQ,QACrBwe,EAAc,EAAQ,QAEtBtT,EAAaC,UAGjB3L,EAAOC,QAAU,SAAUS,GACzB,GAAIF,EAAWE,GAAW,OAAOA,EACjC,MAAM,IAAIgL,EAAWsT,EAAYte,GAAY,wB,kCCR/CV,EAAOC,QAAU,SAAUgf,EAAQ5b,GACjC,MAAO,CACLE,aAAuB,EAAT0b,GACdzb,eAAyB,EAATyb,GAChBxb,WAAqB,EAATwb,GACZ5b,MAAOA,K,kCCLX,IAAI4G,EAAc,EAAQ,QACtBI,EAAS,EAAQ,QAEjBzB,EAAoB9G,SAASP,UAE7B2d,EAAgBjV,GAAe7I,OAAOsd,yBAEtCS,EAAS9U,EAAOzB,EAAmB,QAEnCwW,EAASD,GAA0D,cAAhD,aAAuClW,KAC1DsB,EAAe4U,KAAYlV,GAAgBA,GAAeiV,EAActW,EAAmB,QAAQpF,cAEvGxD,EAAOC,QAAU,CACfkf,OAAQA,EACRC,OAAQA,EACR7U,aAAcA,I,kCCfhB,IAAIhK,EAAS,EAAQ,QAGjB+C,EAAiBlC,OAAOkC,eAE5BtD,EAAOC,QAAU,SAAUmD,EAAKC,GAC9B,IACEC,EAAe/C,EAAQ6C,EAAK,CAAEC,MAAOA,EAAOG,cAAc,EAAMC,UAAU,IAC1E,MAAOnD,GACPC,EAAO6C,GAAOC,EACd,OAAOA,I,kCCVX,IAYIgG,EAAKF,EAAKkW,EAZVC,EAAkB,EAAQ,QAC1B/e,EAAS,EAAQ,QACjB8L,EAAW,EAAQ,QACnBkT,EAA8B,EAAQ,QACtClV,EAAS,EAAQ,QACjBb,EAAS,EAAQ,QACjBgW,EAAY,EAAQ,QACpBC,EAAa,EAAQ,QAGrB9T,EAAYpL,EAAOoL,UACnB+T,EAAUnf,EAAOmf,QAgBrB,GAAIJ,GAAmB9V,EAAO4B,MAAO,CACnC,IAAIwT,EAAQpV,EAAO4B,QAAU5B,EAAO4B,MAAQ,IAAIsU,GAEhDd,EAAMzV,IAAMyV,EAAMzV,IAClByV,EAAMS,IAAMT,EAAMS,IAClBT,EAAMvV,IAAMuV,EAAMvV,IAElBA,EAAM,SAAUhI,EAAIse,GAClB,GAAIf,EAAMS,IAAIhe,GAAK,MAAM,IAAIsK,EA1BA,8BA6B7B,OAFAgU,EAASC,OAASve,EAClBud,EAAMvV,IAAIhI,EAAIse,GACPA,GAETxW,EAAM,SAAU9H,GACd,OAAOud,EAAMzV,IAAI9H,IAAO,IAE1Bge,EAAM,SAAUhe,GACd,OAAOud,EAAMS,IAAIhe,QAEd,CACL,IAAIwe,EAAQL,EAAU,SACtBC,EAAWI,IAAS,EACpBxW,EAAM,SAAUhI,EAAIse,GAClB,GAAItV,EAAOhJ,EAAIwe,GAAQ,MAAM,IAAIlU,EAzCJ,8BA4C7B,OAFAgU,EAASC,OAASve,EAClBke,EAA4Ble,EAAIwe,EAAOF,GAChCA,GAETxW,EAAM,SAAU9H,GACd,OAAOgJ,EAAOhJ,EAAIwe,GAASxe,EAAGwe,GAAS,IAEzCR,EAAM,SAAUhe,GACd,OAAOgJ,EAAOhJ,EAAIwe,IAItB7f,EAAOC,QAAU,CACfoJ,IAAKA,EACLF,IAAKA,EACLkW,IAAKA,EACL1U,QArDY,SAAUtJ,GACtB,OAAOge,EAAIhe,GAAM8H,EAAI9H,GAAMgI,EAAIhI,EAAI,KAqDnCye,UAlDc,SAAUC,GACxB,OAAO,SAAU1e,GACf,IAAI+J,EACJ,IAAKiB,EAAShL,KAAQ+J,EAAQjC,EAAI9H,IAAKkE,OAASwa,EAC9C,MAAM,IAAIpU,EAAU,0BAA4BoU,EAAO,aACvD,OAAO3U,M,kCCrBbpL,EAAOC,QAAU,SAAUoB,GACzB,OAAOA,U,kCCHT,IAAI2e,EAAyB,EAAQ,QAEjC7e,EAAUC,OAIdpB,EAAOC,QAAU,SAAUS,GACzB,OAAOS,EAAQ6e,EAAuBtf,M,oCCPxC,IAAIkJ,EAAQ,EAAQ,QAGpB5J,EAAOC,SAAW2J,GAAM,WAEtB,OAA+E,IAAxExI,OAAOkC,eAAe,GAAI,EAAG,CAAE6F,IAAK,WAAc,OAAO,KAAQ,O,kCCL1E,IAAIkD,EAAW,EAAQ,QAEnBxC,EAAUC,OACV4B,EAAaC,UAGjB3L,EAAOC,QAAU,SAAUS,GACzB,GAAI2L,EAAS3L,GAAW,OAAOA,EAC/B,MAAM,IAAIgL,EAAW7B,EAAQnJ,GAAY,uB,kCCR3C,IAAIF,EAAa,EAAQ,QAEzBR,EAAOC,QAAU,SAAUoB,GACzB,MAAoB,iBAANA,EAAwB,OAAPA,EAAcb,EAAWa,K,kCCH1D,IAAI+I,EAAc,EAAQ,QACtB5J,EAAa,EAAQ,QACrBoe,EAAQ,EAAQ,QAEhBqB,EAAmB7V,EAAYtI,SAASuJ,UAGvC7K,EAAWoe,EAAMpU,iBACpBoU,EAAMpU,cAAgB,SAAUnJ,GAC9B,OAAO4e,EAAiB5e,KAI5BrB,EAAOC,QAAU2e,EAAMpU,e,kCCbvB,IAAIJ,EAAc,EAAQ,QAEtBoD,EAAK,EACL0S,EAAUze,KAAKwV,SACf5L,EAAWjB,EAAY,GAAIiB,UAE/BrL,EAAOC,QAAU,SAAUmD,GACzB,MAAO,gBAAqBzC,IAARyC,EAAoB,GAAKA,GAAO,KAAOiI,IAAWmC,EAAK0S,EAAS,M,kCCPtF,IAAIjW,EAAc,EAAQ,QACtBkW,EAAuB,EAAQ,QAC/BC,EAA2B,EAAQ,QAEvCpgB,EAAOC,QAAUgK,EAAc,SAAUoW,EAAQjd,EAAKC,GACpD,OAAO8c,EAAqB5W,EAAE8W,EAAQjd,EAAKgd,EAAyB,EAAG/c,KACrE,SAAUgd,EAAQjd,EAAKC,GAEzB,OADAgd,EAAOjd,GAAOC,EACPgd,I,oCCRT,IAAIpW,EAAc,EAAQ,QACtBqW,EAAiB,EAAQ,QACzBC,EAA0B,EAAQ,QAClCC,EAAW,EAAQ,QACnBC,EAAgB,EAAQ,QAExB/U,EAAaC,UAEb+U,EAAkBtf,OAAOkC,eAEzBqd,EAA4Bvf,OAAOsd,yBAOvCze,EAAQsJ,EAAIU,EAAcsW,EAA0B,SAAwBxC,EAAG7b,EAAG0e,GAIhF,GAHAJ,EAASzC,GACT7b,EAAIue,EAAcve,GAClBse,EAASI,GACQ,mBAAN7C,GAA0B,cAAN7b,GAAqB,UAAW0e,GARlD,aAQ4EA,IAAeA,EAAmB,SAAG,CAC5H,IAAIC,EAAUF,EAA0B5C,EAAG7b,GACvC2e,GAAWA,EAAgB,WAC7B9C,EAAE7b,GAAK0e,EAAWvd,MAClBud,EAAa,CACXpd,aAdW,iBAcmBod,EAAaA,EAAuB,aAAIC,EAAoB,aAC1Ftd,WAhBS,eAgBiBqd,EAAaA,EAAqB,WAAIC,EAAkB,WAClFpd,UAAU,IAGd,OAAOid,EAAgB3C,EAAG7b,EAAG0e,IAC7BF,EAAkB,SAAwB3C,EAAG7b,EAAG0e,GAIlD,GAHAJ,EAASzC,GACT7b,EAAIue,EAAcve,GAClBse,EAASI,GACLN,EAAgB,IAClB,OAAOI,EAAgB3C,EAAG7b,EAAG0e,GAC7B,MAAOtgB,IACT,GAAI,QAASsgB,GAAc,QAASA,EAAY,MAAM,IAAIlV,EAAW,2BAErE,MADI,UAAWkV,IAAY7C,EAAE7b,GAAK0e,EAAWvd,OACtC0a,I,kCCzCT,IAAI+C,EAAc,EAAQ,QACtBC,EAAW,EAAQ,QAIvB/gB,EAAOC,QAAU,SAAUS,GACzB,IAAI0C,EAAM0d,EAAYpgB,EAAU,UAChC,OAAOqgB,EAAS3d,GAAOA,EAAMA,EAAM,K,kCCPrC,IAAIod,EAAW,EAAQ,QAIvBxgB,EAAOC,QAAU,WACf,IAAI+gB,EAAOR,EAAS3e,MAChBof,EAAS,GASb,OARID,EAAKvC,aAAYwC,GAAU,KAC3BD,EAAKzgB,SAAQ0gB,GAAU,KACvBD,EAAK1C,aAAY2C,GAAU,KAC3BD,EAAKzC,YAAW0C,GAAU,KAC1BD,EAAK3C,SAAQ4C,GAAU,KACvBD,EAAKE,UAASD,GAAU,KACxBD,EAAKG,cAAaF,GAAU,KAC5BD,EAAKxC,SAAQyC,GAAU,KACpBA,I,kCCfT,IAAIhX,EAAc,EAAQ,QACtBL,EAAQ,EAAQ,QAIpB5J,EAAOC,QAAUgK,GAAeL,GAAM,WAEpC,OAGiB,KAHVxI,OAAOkC,gBAAe,cAA6B,YAAa,CACrED,MAAO,GACPI,UAAU,IACTlC,c,kCCVL,IAAIhB,EAAS,EAAQ,QACjBiJ,EAAS,EAAQ,QACjBa,EAAS,EAAQ,QACjBZ,EAAM,EAAQ,QACd1J,EAAgB,EAAQ,QACxBmB,EAAoB,EAAQ,QAE5BhB,EAASK,EAAOL,OAChBkhB,EAAwB5X,EAAO,OAC/B6X,EAAwBngB,EAAoBhB,EAAY,KAAKA,EAASA,GAAUA,EAAOohB,eAAiB7X,EAE5GzJ,EAAOC,QAAU,SAAUgJ,GAKvB,OAJGoB,EAAO+W,EAAuBnY,KACjCmY,EAAsBnY,GAAQlJ,GAAiBsK,EAAOnK,EAAQ+I,GAC1D/I,EAAO+I,GACPoY,EAAsB,UAAYpY,IAC/BmY,EAAsBnY,K,kCChBjC,IAAIjF,EAAO,EAAQ,QACfqI,EAAW,EAAQ,QACnB0U,EAAW,EAAQ,QACnBQ,EAAY,EAAQ,QACpBC,EAAsB,EAAQ,QAC9BC,EAAkB,EAAQ,QAE1B/V,EAAaC,UACb+V,EAAeD,EAAgB,eAInCzhB,EAAOC,QAAU,SAAUqM,EAAOC,GAChC,IAAKF,EAASC,IAAUyU,EAASzU,GAAQ,OAAOA,EAChD,IACI2U,EADAU,EAAeJ,EAAUjV,EAAOoV,GAEpC,GAAIC,EAAc,CAGhB,QAFahhB,IAAT4L,IAAoBA,EAAO,WAC/B0U,EAASjd,EAAK2d,EAAcrV,EAAOC,IAC9BF,EAAS4U,IAAWF,EAASE,GAAS,OAAOA,EAClD,MAAM,IAAIvV,EAAW,2CAGvB,YADa/K,IAAT4L,IAAoBA,EAAO,UACxBiV,EAAoBlV,EAAOC,K,kCCvBpCvM,EAAOC,SAAU,G,kCCAjB,IAAI0I,EAAc,EAAQ,QAEtB3E,EAAOlC,SAASP,UAAUyC,KAE9BhE,EAAOC,QAAU0I,EAAc3E,EAAK8E,KAAK9E,GAAQ,WAC/C,OAAOA,EAAKC,MAAMD,EAAMlD,a,kCCL1B,IAAIP,EAAS,EAAQ,QACjBqhB,EAAuB,EAAQ,QAG/BhD,EAAQre,EADC,uBACiBqhB,EADjB,qBAC8C,IAE3D5hB,EAAOC,QAAU2e,G,mBCPjB,IAAIiD,EAGJA,EAAI,WACH,OAAOhgB,KADJ,GAIJ,IAECggB,EAAIA,GAAK,IAAI/f,SAAS,cAAb,GACR,MAAO0Q,GAEc,iBAAX7Q,SAAqBkgB,EAAIlgB,QAOrC3B,EAAOC,QAAU4hB,G,kCClBjB,IAAIthB,EAAS,EAAQ,QACjB8L,EAAW,EAAQ,QAEnBd,EAAWhL,EAAOgL,SAElB4T,EAAS9S,EAASd,IAAac,EAASd,EAASrB,eAErDlK,EAAOC,QAAU,SAAUoB,GACzB,OAAO8d,EAAS5T,EAASrB,cAAc7I,GAAM,K,kCCR/C,IAAId,EAAS,EAAQ,QACjBC,EAAa,EAAQ,QAErBkf,EAAUnf,EAAOmf,QAErB1f,EAAOC,QAAUO,EAAWkf,IAAY,cAActT,KAAKtC,OAAO4V","file":"3-12d47022f25e533f1e98.js","sourcesContent":["'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","'use strict';\nmodule.exports = {};\n","'use strict';\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","'use strict';\nvar check = function (it) {\n  return it && it.Math === Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  check(typeof this == 'object' && this) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","'use strict';\nvar aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"atrule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","import prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: theme\n};\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function (line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\nvar appendTypes = function (types, add) {\n  var typesSize = types.length;\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\nvar normalizeTokens = function (tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\nvar themeToDict = function (theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  return target;\n}\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    Component.apply(this, args);\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n      var themeDict = this$1.getThemeDict(this$1.props);\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n      if (key !== undefined) {\n        output.key = key;\n      }\n      if (className) {\n        output.className += \" \" + className;\n      }\n      return output;\n    });\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n      if (key !== undefined) {\n        output.key = key;\n      }\n      if (className) {\n        output.className += \" \" + className;\n      }\n      return output;\n    });\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n  return Highlight;\n}(Component);\nexport default Highlight;\nexport { defaultProps };","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","'use strict';\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });\n  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\nvar $String = global.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol('symbol detection');\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a !== 7;\n});\n","'use strict';\nvar $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar $String = String;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\nvar stringSlice = uncurryThis(''.slice);\nvar replace = uncurryThis(''.replace);\nvar join = uncurryThis([].join);\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (stringSlice($String(name), 0, 7) === 'Symbol(') {\n    name = '[' + replace($String(name), /^Symbol\\(([^)]*)\\)/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n","'use strict';\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nvar documentAll = typeof document == 'object' && document.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nmodule.exports = typeof documentAll == 'undefined' && documentAll !== undefined ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","'use strict';\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw new $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","'use strict';\nvar global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","'use strict';\nmodule.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","'use strict';\nvar call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw new $TypeError(\"Can't convert object to primitive value\");\n};\n","import \"core-js/modules/es.regexp.flags.js\";\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\n\nvar Prism = function () {\n  // Private helper vars\n  var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n  var uniqueId = 0;\n\n  // The grammar object for plaintext\n  var plainTextGrammar = {};\n  var _ = {\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function (o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function (obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n        return obj['__id'];\n      },\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone;\n        var id;\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n            if (visited[id]) {\n              return visited[id];\n            }\n            clone = /** @type {Record<string, any>} */{};\n            visited[id] = clone;\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n            return /** @type {any} */clone;\n          case 'Array':\n            id = _.util.objId(o);\n            if (visited[id]) {\n              return visited[id];\n            }\n            clone = [];\n            visited[id] = clone;\n            ( /** @type {Array} */ /** @type {any} */o).forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return /** @type {any} */clone;\n          default:\n            return o;\n        }\n      },\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function (element) {\n        while (element) {\n          var m = lang.exec(element.className);\n          if (m) {\n            return m[1].toLowerCase();\n          }\n          element = element.parentElement;\n        }\n        return 'none';\n      },\n      /**\n       * Sets the Prism `language-xxxx` class of the given element.\n       *\n       * @param {Element} element\n       * @param {string} language\n       * @returns {void}\n       */\n      setLanguage: function (element, language) {\n        // remove all `language-xxxx` classes\n        // (this might leave behind a leading space)\n        element.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n        // add the new `language-xxxx` class\n        // (using `classList` will automatically clean up spaces for us)\n        element.classList.add('language-' + language);\n      },\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function (element, className, defaultActivation) {\n        var no = 'no-' + className;\n        while (element) {\n          var classList = element.classList;\n          if (classList.contains(className)) {\n            return true;\n          }\n          if (classList.contains(no)) {\n            return false;\n          }\n          element = element.parentElement;\n        }\n        return !!defaultActivation;\n      }\n    },\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * The grammar for plain, unformatted text.\n       */\n      plain: plainTextGrammar,\n      plaintext: plainTextGrammar,\n      text: plainTextGrammar,\n      txt: plainTextGrammar,\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function (id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n        return lang;\n      },\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function (inside, before, insert, root) {\n        root = root || ( /** @type {any} */_.languages);\n        var grammar = root[inside];\n        /** @type {Grammar} */\n        var ret = {};\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            // Do not insert token which also occur in insert. See #1525\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n        var old = root[inside];\n        root[inside] = ret;\n\n        // Update references in other language definitions\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n            var property = o[i];\n            var propertyType = _.util.type(property);\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function (text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      _.hooks.run('before-tokenize', env);\n      env.tokens = _.tokenize(env.code, env.grammar);\n      _.hooks.run('after-tokenize', env);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function (text, grammar) {\n      var rest = grammar.rest;\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n        delete grammar.rest;\n      }\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function (name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function (name, env) {\n        var callbacks = _.hooks.all[name];\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n\n  // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n    this.alias = alias;\n    // Copy of the full string this token was created from\n    this.length = (matchedStr || '').length | 0;\n  }\n\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n    _.hooks.run('wrap', env);\n    var attributes = '';\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n\n  /**\n   * @param {RegExp} pattern\n   * @param {number} pos\n   * @param {string} text\n   * @param {boolean} lookbehind\n   * @returns {RegExpExecArray | null}\n   */\n  function matchPattern(pattern, pos, text, lookbehind) {\n    pattern.lastIndex = pos;\n    var match = pattern.exec(text);\n    if (match && lookbehind && match[1]) {\n      // change the match to remove the text matched by the Prism lookbehind group\n      var lookbehindLength = match[1].length;\n      match.index += lookbehindLength;\n      match[0] = match[0].slice(lookbehindLength);\n    }\n    return match;\n  }\n\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n        var patternObj = patterns[j];\n        var inside = patternObj.inside;\n        var lookbehind = !!patternObj.lookbehind;\n        var greedy = !!patternObj.greedy;\n        var alias = patternObj.alias;\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n\n        /** @type {RegExp} */\n        var pattern = patternObj.pattern || patternObj;\n        for (\n        // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n          var str = currentNode.value;\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n          if (str instanceof Token) {\n            continue;\n          }\n          var removeCount = 1; // this is the to parameter of removeBetween\n          var match;\n          if (greedy) {\n            match = matchPattern(pattern, pos, text, lookbehind);\n            if (!match || match.index >= text.length) {\n              break;\n            }\n            var from = match.index;\n            var to = match.index + match[0].length;\n            var p = pos;\n\n            // find the node that contains the match\n            p += currentNode.value.length;\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            }\n            // adjust pos (and p)\n            p -= currentNode.value.length;\n            pos = p;\n\n            // the current node is a Token, then the match starts inside another Token, which is invalid\n            if (currentNode.value instanceof Token) {\n              continue;\n            }\n\n            // find the last node which is affected by this match\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n            removeCount--;\n\n            // replace with the new match\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            match = matchPattern(pattern, 0, str, lookbehind);\n            if (!match) {\n              continue;\n            }\n          }\n\n          // eslint-disable-next-line no-redeclare\n          var from = match.index;\n          var matchStr = match[0];\n          var before = str.slice(0, from);\n          var after = str.slice(from + matchStr.length);\n          var reach = pos + str.length;\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n          var removeFrom = currentNode.prev;\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n\n            /** @type {RematchOptions} */\n            var nestedRematch = {\n              cause: token + ',' + j,\n              reach: reach\n            };\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n            // the reach might have been extended because of the rematching\n            if (rematch && nestedRematch.reach > rematch.reach) {\n              rematch.reach = nestedRematch.reach;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n\n    /** @type {LinkedListNode<T>} */\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n    this.tail = tail;\n    this.length = 0;\n  }\n\n  /**\n   * Adds a new node with the given value to the list.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n  function removeRange(list, node, count) {\n    var next = node.next;\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n    return array;\n  }\n  return _;\n}();\nvar prism = Prism;\nPrism.default = Prism;\n\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nprism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nprism.languages.markup['tag'].inside['attr-value'].inside['entity'] = prism.languages.markup['entity'];\nprism.languages.markup['doctype'].inside['internal-subset'].inside = prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nprism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function (attrName, lang) {\n    prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nprism.languages.html = prism.languages.markup;\nprism.languages.mathml = prism.languages.markup;\nprism.languages.svg = prism.languages.markup;\nprism.languages.xml = prism.languages.extend('markup', {});\nprism.languages.ssml = prism.languages.xml;\nprism.languages.atom = prism.languages.xml;\nprism.languages.rss = prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [\n    // [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    },\n    // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    },\n    // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [\n    // a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [\n    // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    },\n    // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    },\n    // “Normal” string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n  Prism.languages.shell = Prism.languages.bash;\n})(prism);\n/* \"prismjs/components/prism-clike\" */\n\nprism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nprism.languages.c = prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nprism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nprism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, prism.languages.c['string']],\n      'char': prism.languages.c['char'],\n      'comment': prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: prism.languages.c\n      }\n    }\n  }\n});\nprism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    },\n    // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n    // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n    // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' +\n      // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' +\n      // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(prism);\n/* \"prismjs/components/prism-css\" */\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector.pattern,\n    lookbehind: true,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: 'color'\n    },\n    'color': [{\n      pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(prism);\n/* \"prismjs/components/prism-javascript\" */\n\nprism.languages.javascript = prism.languages.extend('clike', {\n  'class-name': [prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + (\n    // constant\n    /NaN|Infinity/.source + '|' +\n    // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' +\n    // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' +\n    // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' +\n    // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' +\n    // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nprism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nprism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nprism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nprism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\nif (prism.languages.markup) {\n  prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\nprism.languages.js = prism.languages.javascript;\n/* \"prismjs/components/prism-coffeescript\" */\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/;\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [\n    // Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(prism);\n/* \"prismjs/components/prism-yaml\" */\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(prism);\n/* \"prismjs/components/prism-markdown\" */\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n    var codeLang = '';\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n    var grammar = Prism.languages[codeLang];\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  }; // IE 11 doesn't support `String.fromCodePoint`\n\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, ''); // decode known entities\n\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n      if (code[0] === '#') {\n        var value;\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n        if (known) {\n          return known;\n        } // unable to decode\n\n        return m;\n      }\n    });\n    return text;\n  }\n  Prism.languages.md = Prism.languages.markdown;\n})(prism);\n/* \"prismjs/components/prism-graphql\" */\n\nprism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:false|true)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'atom-input': {\n    pattern: /\\b[A-Z]\\w*Input\\b/,\n    alias: 'class-name'\n  },\n  'scalar': /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  'constant': /\\b[A-Z][A-Z_\\d]*\\b/,\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-mutation': {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-query': {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'property-query': /\\w+(?=\\s*\\()/,\n  'object': /\\w+(?=\\s*\\{)/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'property': /\\w+/\n};\nprism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n  if (env.language !== 'graphql') {\n    return;\n  }\n  /**\n   * get the graphql token stream that we want to customize\n   *\n   * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n   * @type {Token[]}\n   */\n\n  var validTokens = env.tokens.filter(function (token) {\n    return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';\n  });\n  var currentIndex = 0;\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {number} offset\n   * @returns {Token | undefined}\n   */\n\n  function getToken(offset) {\n    return validTokens[currentIndex + offset];\n  }\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {readonly string[]} types\n   * @param {number} [offset=0]\n   * @returns {boolean}\n   */\n\n  function isTokenType(types, offset) {\n    offset = offset || 0;\n    for (var i = 0; i < types.length; i++) {\n      var token = getToken(i + offset);\n      if (!token || token.type !== types[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Returns the index of the closing bracket to an opening bracket.\n   *\n   * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n   *\n   * If no closing bracket could be found, `-1` will be returned.\n   *\n   * @param {RegExp} open\n   * @param {RegExp} close\n   * @returns {number}\n   */\n\n  function findClosingBracket(open, close) {\n    var stackHeight = 1;\n    for (var i = currentIndex; i < validTokens.length; i++) {\n      var token = validTokens[i];\n      var content = token.content;\n      if (token.type === 'punctuation' && typeof content === 'string') {\n        if (open.test(content)) {\n          stackHeight++;\n        } else if (close.test(content)) {\n          stackHeight--;\n          if (stackHeight === 0) {\n            return i;\n          }\n        }\n      }\n    }\n    return -1;\n  }\n  /**\n   * Adds an alias to the given token.\n   *\n   * @param {Token} token\n   * @param {string} alias\n   * @returns {void}\n   */\n\n  function addAlias(token, alias) {\n    var aliases = token.alias;\n    if (!aliases) {\n      token.alias = aliases = [];\n    } else if (!Array.isArray(aliases)) {\n      token.alias = aliases = [aliases];\n    }\n    aliases.push(alias);\n  }\n  for (; currentIndex < validTokens.length;) {\n    var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens\n\n    if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n      // any array of the names of all input variables (if any)\n      var inputVariables = [];\n      if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {\n        // definition\n        currentIndex += 2; // skip 'definition-mutation' and 'punctuation'\n\n        var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n        if (definitionEnd === -1) {\n          continue;\n        } // find all input variables\n\n        for (; currentIndex < definitionEnd; currentIndex++) {\n          var t = getToken(0);\n          if (t.type === 'variable') {\n            addAlias(t, 'variable-input');\n            inputVariables.push(t.content);\n          }\n        }\n        currentIndex = definitionEnd + 1;\n      }\n      if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {\n        currentIndex++; // skip opening bracket\n\n        addAlias(getToken(0), 'property-mutation');\n        if (inputVariables.length > 0) {\n          var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n          if (mutationEnd === -1) {\n            continue;\n          } // give references to input variables a special alias\n\n          for (var i = currentIndex; i < mutationEnd; i++) {\n            var varToken = validTokens[i];\n            if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {\n              addAlias(varToken, 'variable-input');\n            }\n          }\n        }\n      }\n    }\n  }\n});\n/* \"prismjs/components/prism-sql\" */\n\nprism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n  Prism.languages.javascript['template-string'] = [\n  // styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),\n  // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source),\n  // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source),\n  // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:markdown|md)/.source),\n  // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source),\n  // sql`...`\n  createTemplate('sql', /\\bsql/.source),\n  // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {\n          /* noop */\n        }\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n        var token = tokens[i];\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token : /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n            if (before) {\n              replacement.push(before);\n            }\n            replacement.push(middle);\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n        if (typeof token === 'string') {\n          continue;\n        }\n        var content = token.content;\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n          continue;\n        }\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(prism);\n/* \"prismjs/components/prism-typescript\" */\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n  // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n  // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(prism);\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function (token) {\n    if (!token) {\n      return '';\n    }\n    if (typeof token === 'string') {\n      return token;\n    }\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n    return token.content.map(stringifyToken).join('');\n  };\n  var walkTokens = function (tokens) {\n    var openedTags = [];\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n    walkTokens(env.tokens);\n  });\n})(prism);\n/* \"prismjs/components/prism-diff\" */\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [\n    // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n    // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m,\n    // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(prism);\n/* \"prismjs/components/prism-git\" */\n\nprism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/\n    }\n  },\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nprism.languages.go = prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [\n  // binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i,\n  // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n  // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nprism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete prism.languages.go['class-name'];\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function (env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function (env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n            var token = tokens[i];\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n                replacement.push(middle);\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */) {\n              walkTokens(token.content);\n            }\n          }\n          return tokens;\n        }\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n  Prism.languages.hbs = Prism.languages.handlebars;\n})(prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\nprism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nprism.languages.webmanifest = prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nprism.languages.less = prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nprism.languages.insertBefore('less', 'property', {\n  'variable': [\n  // Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  },\n  // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nprism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nprism.languages.objectivec = prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete prism.languages.objectivec['class-name'];\nprism.languages.objc = prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n// https://ocaml.org/manual/lex.html\n\nprism.languages.ocaml = {\n  'comment': {\n    pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n    greedy: true\n  },\n  'char': {\n    pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n    greedy: true\n  },\n  'string': [{\n    pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n    greedy: true\n  }],\n  'number': [\n  // binary and octal\n  /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i,\n  // hexadecimal\n  /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i,\n  // decimal\n  /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i],\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'property'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'property'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'symbol'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'operator-like-punctuation': {\n    pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n    alias: 'punctuation'\n  },\n  // Custom operators are allowed\n  'operator': /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nprism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nprism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = prism.languages.python;\nprism.languages.py = prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nprism.languages.reason = prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n});\nprism.languages.insertBefore('reason', 'class-name', {\n  'char': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    greedy: true\n  },\n  // Negative look-ahead prevents from matching things like String.capitalize\n  'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-scss\" */\n\nprism.languages.scss = prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nprism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nprism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nprism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nprism.languages.scss['atrule'].inside.rest = prism.languages.scss;\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:false|true)\\b/,\n    'operator': [\n    // We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^\\{|\\}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(prism);\n/* \"prismjs/components/prism-tsx\" */\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(prism);\n/* \"prismjs/components/prism-wasm\" */\n\nprism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\nexport default prism;","'use strict';\nvar global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","'use strict';\nvar IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.35.0',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.35.0/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw new $TypeError(tryToString(argument) + ' is not a function');\n};\n","'use strict';\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","'use strict';\nvar global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","'use strict';\nvar NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw new TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","'use strict';\n// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","'use strict';\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;\n});\n","'use strict';\nvar isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw new $TypeError($String(argument) + ' is not an object');\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\n\nmodule.exports = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype !== 42;\n});\n","'use strict';\nvar global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = global.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw new $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","'use strict';\nmodule.exports = false;\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","'use strict';\nvar global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","'use strict';\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n"],"sourceRoot":""}