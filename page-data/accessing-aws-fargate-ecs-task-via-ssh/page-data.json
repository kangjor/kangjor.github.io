{"componentChunkName":"component---packages-gatsby-theme-kenny-blog-core-src-templates-post-query-tsx","path":"/accessing-aws-fargate-ecs-task-via-ssh","result":{"data":{"post":{"__typename":"MdxPost","id":"9844a952-64f7-553e-8a57-6beb96673028","slug":"/accessing-aws-fargate-ecs-task-via-ssh","title":"Accessing AWS Fargate ECS(Task) via SSH","date":"04.01.2024","tags":[{"name":"DevOps","slug":"dev-ops"},{"name":"AWS","slug":"aws"}],"description":"Explore how to access AWS Fargate ECS(Task) using AWS Systems Manager Session Manager. Learn debugging techniques, utilize CloudWatch Logs, and leverage management services for efficient troubleshooting in a fully managed container orchestration environment.","body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Accessing AWS Fargate ECS(Task) via SSH\",\n  \"date\": \"2024-01-04T00:00:00.000Z\",\n  \"description\": \"Explore how to access AWS Fargate ECS(Task) using AWS Systems Manager Session Manager. Learn debugging techniques, utilize CloudWatch Logs, and leverage management services for efficient troubleshooting in a fully managed container orchestration environment.\",\n  \"tags\": [\"DevOps\", \"AWS\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Amazon ECS is a container orchestration service designed for deploying, managing, and scaling containerized applications. Particularly with Fargate, you can run containers without the need to manage EC2 instances. This blog post guides you on how to access ECS(Task) running on AWS Fargate via SSH.\"), mdx(\"h3\", null, \"Prerequisites\"), mdx(\"p\", null, \"AWS Account and ECS Cluster: You need an AWS account with the necessary permissions to create and manage ECS clusters.\"), mdx(\"p\", null, \"ECR or Another Container Registry Usage: Make sure to use an ECR or another container registry for storing and fetching container images.\"), mdx(\"h3\", null, \"Accessing Fargate ECS(Task) via SSH\"), mdx(\"h4\", null, \"1. Check ECS Task Using AWS CLI or Console\"), mdx(\"p\", null, \"Since Fargate ECS(Task) doesn't involve direct access to EC2 instances, SSH access is not possible. Instead, use AWS CLI or the console to inspect the Task's logs and troubleshoot any issues.\"), mdx(\"h4\", null, \"2. Debugging via CloudWatch Logs\"), mdx(\"p\", null, \"Logs from a Fargate Task are recorded in CloudWatch Logs. Navigate to CloudWatch Logs using AWS CLI or the console to examine logs and find information that might help in troubleshooting.\"), mdx(\"h4\", null, \"3. Utilize AWS Systems Manager Session Manager\"), mdx(\"p\", null, \"As direct SSH access is challenging in Fargate, leverage \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AWS Systems Manager Session Manager\"), \". Initiate a remote shell session and inspect logs. Install \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Session Manager\"), \" if you don't have it.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Check the service is enabled \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ExcuteCommand\"), \" and make it true if it's the value is false.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# check\\naws ecs describe-tasks --cluster <example-cluster-name> --tasks <example-task-id>| grep enableExecuteCommand\\n>   \\\"enableExecuteCommand\\\": false,\\n\\n# make it true if it's false\\naws ecs update-service --cluster <example-cluster-name> --service <example-service> --region <example-region> --enable-execute-command --force-new-deployment\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Starting a Session with AWS Systems Manager:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# Modify TASK_ID and REGION appropriately\\nTASK_ID=<your-task-id>\\nREGION=<your-region>\\n\\n# Start a session\\naws ssm start-session --target $TASK_ID --region $REGION\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Connecting a task via ssh\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"aws ecs execute-command \\\\\\n  --region us-east-1 \\\\\\n  --cluster <ECS_CLUSTER_NAME> \\\\\\n  --task <ECS_TASK_ID> \\\\\\n  --container <CONTAINER_NAME> \\\\\\n  --command \\\"/bin/bash\\\" \\\\\\n  --interactive\\n\")))), mdx(\"p\", null, \"Ensure that the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ECS Task execution role\"), \" has the necessary permissions, especially the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AmazonSSMManagedInstanceCore policy\"), \". Navigate to the AWS Systems Manager console, go to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Session Manager\"), \" section, and start a session.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n    \\\"Statement\\\": [\\n        {\\n            \\\"Action\\\": [\\n                \\\"ssmmessages:CreateControlChannel\\\",\\n                \\\"ssmmessages:CreateDataChannel\\\",\\n                \\\"ssmmessages:OpenControlChannel\\\",\\n                \\\"ssmmessages:OpenDataChannel\\\"\\n            ],\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Resource\\\": \\\"*\\\"\\n        }\\n    ],\\n    \\\"Version\\\": \\\"2012-10-17\\\"\\n}\\n\")), mdx(\"h3\", null, \"Considerations\"), mdx(\"p\", null, \"Fargate necessitates the use of AWS management services like CloudWatch Logs and AWS Systems Manager Session Manager for debugging and access.\\nGrant the required permissions to the ECS Task execution role for utilizing AWS Systems Manager Session Manager effectively.\\nInstead of attempting direct SSH access to AWS Fargate ECS(Task), leverage AWS management services for log inspection and debugging.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Amazon ECS is a container orchestration service designed for deploying, managing, and scaling containerized applications. Particularly withâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/accessing-aws-fargate-ecs-task-via-ssh"}},"staticQueryHashes":["1386366609","1386366609","1580740877"]}