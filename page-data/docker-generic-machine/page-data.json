{"componentChunkName":"component---packages-gatsby-theme-kenny-blog-core-src-templates-post-query-tsx","path":"/docker-generic-machine","result":{"data":{"post":{"__typename":"MdxPost","id":"e389ddbf-6aa2-5300-8903-99e777cf0eff","slug":"/docker-generic-machine","title":"Docker generic machine","date":"06.01.2020","tags":[{"name":"DevOps","slug":"dev-ops"}],"description":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Docker generic machine\",\n  \"date\": \"2020-01-06T00:00:00.000Z\",\n  \"tags\": [\"DevOps\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"check points on create\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"setting SSH-key login\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"add user as sudoer\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"add user group 'docker'\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"running Docker\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"iptables setting (firewall)\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"create docker-machine w/o devicemapper above version 18\")), mdx(\"h3\", null, \"Docker generic machine \\uC0DD\\uC131\\uD558\\uAE30\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ypereirareis.github.io/blog/2016/05/12/docker-machine-generic-driver-devicemapper/\"\n  }, \"tutorial\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.thegeekstuff.com/2016/02/docker-machine-create-generic/comment-page-1/\"\n  }, \"another tutorial\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://softwaretester.info/add-remote-centos-to-docker-machine/\"\n  }, \"CentOS tutorial\")), mdx(\"p\", null, \"Remote \\uBA38\\uC2E0\\uC5D0 user \\uC0DD\\uC131\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo adduser dockeradmin\\n\")), mdx(\"p\", null, \"user must have \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo\"), \" access without asking for password\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo nano /etc/sudoer\\n\\n# User alias specification\\ndockeradmin      ALL=(ALL) NOPASSWD: ALL\\ndockeradmin      ALL=(ALL) NOPASSWD: /bin/netstat\\n\")), mdx(\"p\", null, \"user must have netstat access.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ cat netstat \\n#!/bin/bash\\nexec /usr/bin/sudo /bin/netstat \\\"$@\\\"\\n\\n$ chmod +x netstat\\n$ sudo cp netstat /usr/local/bin/\\n\")), mdx(\"p\", null, \"By default docker-machine uses port \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2376\"), \" to communicate with docker daemons. Of course we need to open this port on the remote server:\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://blog.bagesoft.com/712\"\n  }, \"iptables in ubuntu \\uAD00\\uB828 \\uCC38\\uC870\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://blog.plura.io/?p=4519\"\n  }, \"iptables in centos \\uAD00\\uB828 \\uCC38\\uC870\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# list iptables rules in ubuntu\\nsudo vi /etc/iptables/rules.v4\\n# or\\nsudo iptables -S\\n# in centos\\nsudo vi /etc/sysconfig/iptables\\n\\n# Docker machine port 2376\\niptables -t filter -A INPUT -p tcp --dport 2376 -j ACCEPT\\niptables -t filter -A OUTPUT -p tcp --dport 2376 -j ACCEPT\\n\\n# additional line\\niptables -t filter -A RH-Firewall-1-INPUT -p tcp -m state --state NEW -m tcp --dport 2376 -j ACCEPT\\n\\n# applying modifications in ubuntu\\nsudo apt install iptables-persistent\\nsudo netfilter-persistent save\\nsudo netfilter-persistent reload\\n\")), mdx(\"p\", null, \"firewall setting on CentOS\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://serverfault.com/questions/341804/opening-up-port-8080-in-centos\"\n  }, \"opening port\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# change firewalld\\n$ firewall-cmd --permanent --zone=public --add-port=2376/tcp\\n$ firewall-cmd --reload\\n \\n# check rules\\n$ firewall-cmd --list-all\\n# or\\n$ less /etc/sysconfig/iptables\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Very important for below v18\"), \", the --engine-storage-driver devicemapper configuration:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ docker-machine create --driver generic --generic-ip-address=222.97.189.187 --generic-ssh-port 7722 --generic-ssh-key=/Users/kenneth/Dropbox/_score_zone/id_rsa --engine-storage-driver devicemapper --generic-ssh-user=dockeradmin score-zone-dev\\n\\n#!! above version 18 devicemapper as a engine-storage-driver is deprecated.\\n$ docker-machine create --driver generic --generic-ip-address=49.247.193.99 --generic-ssh-key=/Users/kenneth/Dropbox/_posi/AWS/sz-ssh.pem --generic-ssh-user=ubuntu testing\\n\\n$docker-machine create --driver generic --generic-ip-address=192.168.0.49 --generic-ssh-key=/Users/kenneth/Dropbox/_limitcomms/id_rsa --generic-ssh-user=ubuntu esxi-docker\\n\\n# to ESXi: Free version is not working!!\\n$ docker-machine create --driver vmwarevsphere --vmwarevsphere-vcenter=192.168.0.19 --vmwarevsphere-username=root --vmwarevsphere-password='vhwl1234!@#$' --vmwarevsphere-network='VM Network' --vmwarevsphere-datastore='1TB' vm\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker run\"), \" \\uC2DC \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker: Error response from daemon: Get https://registry-1.docker.io/v2/\"), \" \\uC5D0\\uB7EC\\uB0A0 \\uACBD\\uC6B0 \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ docker run -it --privileged --pid=host debian nsenter -t 1 -m -u -n -i sh\\n$ cat /etc/resolv.conf\\nsearch local\\nnameserver 192.168.65.1\\nnameserver 192.168.65.3\\n\\n# change to 8.8.8.8\\n$ cat /etc/resolv.conf\\nsearch local\\nnameserver 8.8.8.8\\n\")), mdx(\"p\", null, \"pull \\uC2DC \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Attempting next endpoint for pull after error: Get https://registry-1.docker.io/v2/: dial tcp: lookup registry-1.docker.io on [::1]:53: read udp [::1]:38109->[::1]:53: read: connection refused\\\"\"), \" \\uC5D0\\uB7EC\\uC77C \\uACBD\\uC6B0\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ cat /etc/resolve.conf\\nnameserver <address>\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker version\"), \" \\uC815\\uBCF4\\uC5D0\\uC11C server \\uC815\\uBCF4\\uAC00 \\uBCF4\\uC774\\uC9C0 \\uC54A\\uACE0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock\"), \" \\uC5D0\\uB7EC \\uB0A0\\uB54C\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"add user to 'docker' group\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo usermod -aG docker <username>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"check points on create setting SSH-key login add user as sudoer add user group 'docker' running Docker iptables setting (firewall) create…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/docker-generic-machine"}},"staticQueryHashes":["1386366609","1386366609","1580740877"]}