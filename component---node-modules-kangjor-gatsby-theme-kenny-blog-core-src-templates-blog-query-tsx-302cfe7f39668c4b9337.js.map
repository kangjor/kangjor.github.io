{"version":3,"sources":["webpack:///./node_modules/@kangjor/gatsby-theme-kenny-blog/src/components/blog.tsx","webpack:///./node_modules/@kangjor/gatsby-theme-kenny-blog-core/src/templates/blog-query.tsx","webpack:///./node_modules/@kangjor/gatsby-theme-kenny-blog/src/@kangjor/gatsby-theme-kenny-blog-core/components/blog.tsx","webpack:///./node_modules/@kangjor/gatsby-theme-kenny-blog/src/components/blog-list-item.tsx","webpack:///./node_modules/@kangjor/gatsby-theme-kenny-blog/src/components/listing.tsx"],"names":["Blog","posts","useSiteMetadata","tagsPath","basePath","title","sx","alignItems","justifyContent","flexFlow","h2","a","as","Link","variant","to","replaceSlashes","mt","BlogComponent","allPost","data","nodes","query","BlogListItem","post","showTags","mb","slug","fontSize","color","date","tags","Fragment","Listing","className","map","key"],"mappings":"2NAuCeA,EAjBF,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,MAAwB,EACPC,cAAvBC,EAD8B,EAC9BA,SAAUC,EADoB,EACpBA,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,SACX,YAAC,IAAD,CAAMC,GAAI,CAAEC,WAAY,SAAUC,eAAgB,gBAAiBC,SAAU,SAC3E,YAAC,IAAOC,GAAR,aACA,YAAC,IAAOC,EAAR,CAAUC,GAAIC,OAAMP,GAAI,CAAEQ,QAAS,mBAAqBC,GAAIC,YAAe,IAAIZ,EAAL,IAAiBD,IAA3F,kBAIF,YAAC,IAAD,CAASF,MAAOA,EAAOK,GAAI,CAAEW,GAAI,CAAC,EAAG,QCjC3C,sCAEeC,UCOA,YAAqB,IAC1BC,EAD0B,EAAlBC,KACRD,QAER,OAAO,kBAAC,EAAD,CAAMlB,MAAOkB,EAAQE,SDVfH,IAEFI,EAAQ,a,2GEgCNC,EAjBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,gBAAT,gBACnB,YAAC,IAAD,CAAKC,GAAI,GACP,YAAC,IAAOf,EAAR,CAAUC,GAAIC,OAAME,GAAIS,EAAKG,KAAMrB,GAAI,CAAEsB,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SAClEL,EAAKnB,OAER,iBAAGC,GAAI,CAAEuB,MAAO,YAAaZ,GAAI,EAAGN,EAAG,CAAEkB,MAAO,aAAeD,SAAU,CAAC,EAAG,EAAG,KAC9E,wBAAOJ,EAAKM,MACXN,EAAKO,MAAQN,GACZ,YAAC,IAAMO,SAAP,WAEE,YAAC,IAAD,CAAUD,KAAMP,EAAKO,WCJhBE,IARC,SAAC,GAAD,IAAGhC,EAAH,EAAGA,MAAOiC,EAAV,EAAUA,UAAV,IAAqBT,gBAArB,gBACd,uBAASnB,GAAI,CAAEoB,GAAI,CAAC,EAAG,EAAG,IAAMQ,UAAWA,GACxCjC,EAAMkC,KAAI,SAAAX,GAAI,OACb,YAAC,EAAD,CAAcY,IAAKZ,EAAKG,KAAMH,KAAMA,EAAMC,SAAUA","file":"component---node-modules-kangjor-gatsby-theme-kenny-blog-core-src-templates-blog-query-tsx-302cfe7f39668c4b9337.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Styled } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport { Flex } from \"@theme-ui/components\"\nimport Layout from \"./layout\"\nimport Listing from \"./listing\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport SEO from \"./seo\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Blog = ({ posts }: PostsProps) => {\n  const { tagsPath, basePath } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Styled.h2>Blog</Styled.h2>\n        <Styled.a as={Link} sx={{ variant: `links.secondary` }} to={replaceSlashes(`/${basePath}/${tagsPath}`)}>\n          View all tags\n        </Styled.a>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Blog\n","import { graphql } from \"gatsby\"\nimport BlogComponent from \"../components/blog\"\n\nexport default BlogComponent\n\nexport const query = graphql`\n  query {\n    allPost(sort: { fields: date, order: DESC }, filter: {draft: {ne: true}}) {\n      nodes {\n        slug\n        title\n        date(formatString: \"DD.MM.YYYY\")\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Blog from \"../../../components/blog\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n}\n\nexport default ({ data }: Props) => {\n  const { allPost } = data\n\n  return <Blog posts={allPost.nodes} />\n}\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Styled } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Styled.a as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </Styled.a>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map(post => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}